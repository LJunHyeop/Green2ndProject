spring:
  application:
    name: fefu
  config:
    import: optional:file:.env
  datasource:
    driver-class-name: ${DEFAULT.DB_DRIVER_NAME}
    url: ${DEFAULT.DB_URL}
    username: ${DEFAULT.USER_NAME}
    password: ${DEFAULT.PASSWORD}
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 30MB

mybatis:
  mapper-locations: mappers/**/*.xml

springdoc:
  swagger-ui:
    path: ${SWAGGER_PATH}
    operations-sorter: method
    default-model-expand-depth: 10
  cache:
    disabled: true
  api-docs:
    version: openapi_3_1

file:
  directory: ${DEFAULT.FILE_DIRECTORY}

app:
  jwt:
    # JWT만들 때 사용하는 열쇠(암호화) > 나중에 복호화 할때도 사용
    #secret: DaeguGreenArtAcademyClass502RoomForJavaSpringBootFightingD23sdfsdf23FDSADFSDFDass502RoomForJavaSprinass502RoomForJavaSprin
    secret: ${JWT_SECRET}

    #front-back 간 JWT받는 헤더 키 이름
    header-schema-name: authorization

    #토큰의 종류: Bearer 는 JWT or OAuth(소셜로그인 때 사용)를 의미
    token-type: Bearer

    #AT - 만료시간(ms) - 30분
    #access-token-expiry: 1_800_000
    # access-token-expiry: 30_000 #30초
    access-token-expiry: 600_000 #10분
    #access-token-expiry: 20_000 #20초

    #RT - 만료시간(ms) - 15일
    refresh-token-cookie-name: refresh-token
    refresh-token-expiry: 1_296_000_000
  oauth2:
    authorization-request-cookie-name: oauth2_auth_request
    redirect-uri-param-cookie-name: redirect_uri
    cookie-expiry-seconds: 180
    authorized-redirect-uris:
      - http://localhost:3000/oauth/redirect
      - http://localhost:8080/oauth/redirect
      - http://192.168.0.144:5125/oauth/redirect #내부 도커서버 IP
      - http://112.222.157.156:5125/oauth/redirect #외부 IP

management:
  endpoint: #엔드포인트 (URL)
    health:
      show-details: always #/actuator/health의 디테일한 정보를 표시
    shutdown:
      enabled: true

  endpoints: #전체 엔드포인트 세팅
    web:
      exposure:
        include: "*" #actuator의 모든 엔드포인트를 웹에 노출
  info: #엔드포인트이지만 endpoint아래에 있지 않고, management아래에 위치
    java:
      enabled: true
    os:
      enabled: true
    env:
      enabled: true

  server:
    port: 8080

---
spring:
  config:
    activate:
      on-profile: tdd
  datasource:
    url: ${TDD.DB_URL}
  sql:
    init:
      mode: always

---

spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${PROD.DB_URL}
    username: ${PROD.DB_USERNAME}
    password: ${PROD.DB_PASSWORD}

file:
  directory: ${PROD.FILE_DIRECTORY}



