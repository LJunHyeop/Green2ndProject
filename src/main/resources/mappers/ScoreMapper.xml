<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.fefu.score.ScoreMapper">
        <insert id="postScore" keyProperty="scoreId" useGeneratedKeys="true">
            INSERT INTO score
            SET sc_id = #{stuId}
            , year = #{year}
            , semester = #{semester}
            , name = #{name}
            , exam = #{exam}
            , mark = #{mark}
        </insert>
    <select id="getScore">
        SELECT
        score_id AS scoreId
        ,stu_id AS stuId
        ,class_id AS classId
        ,subject_name AS name
        ,year AS year
        ,exam AS exam
        ,mark AS mark
        ,class_avg AS classAvg
        ,class_rank AS classRank
        ,school_avg AS schoolRank
        ,midterm_avg AS midtermAvg
        ,final_avg AS finalAvg
        ,subject_avg AS subjectAvg
        <if test="semester == 1">
            FROM view_score_semester1
        </if>
        <if test="semester == 2">
            FROM view_score_semester2
        </if>
        <where>
           stu_id =#{stuId}
        </where>
    </select>
    <select id="getStu">
        SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = #{stuId}
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = #{stuId}
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
    </select>

    <select id="getScoreVerJSH">
        SELECT name, mark AS `score`
        FROM score C
        RIGHT JOIN (SELECT A.stu_id AS stuId
                    FROM student A
                    INNER JOIN (SELECT A.stu_id, SUBSTRING(A.grade, 2, 2)
                                FROM student A
                                INNER JOIN student_classes B
                                ON A.stu_id=B.stu_id
                                WHERE LEFT(A.grade, 1)=#{gradle} AND SUBSTRING(A.grade, 2, 2)=#{ban}) AS LJH
                    ON LJH.stu_id=A.stu_id
                    WHERE A.stu_id=#{stuId}) D
        ON C.sc_id=D.stuId
        WHERE `year`=#{year} AND sc_id=#{stuId} AND semester=#{semester} AND exam=#{exam}
    </select>

</mapper>
