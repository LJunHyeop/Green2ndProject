[[34m2024-07-09 12:30:30[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 12:30:31[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 10772 (D:\backEnd\java\fefu\build\classes\java\main started by Administrator in D:\backEnd\java\fefu)[0;39m]
[[34m2024-07-09 12:30:31[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 12:30:31[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 12:30:31[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 12:30:31[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 12:30:31[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 12:30:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 12:30:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:30:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 12:30:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 12:30:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 12:30:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1615 ms[0;39m]
[[34m2024-07-09 12:30:32[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 12:30:32[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3b7f6c0[0;39m]
[[34m2024-07-09 12:30:32[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 12:30:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 12:30:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 12:30:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 12:30:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 12:30:33[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 12:30:33[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 12:30:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 12:30:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:30:34[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 12:30:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 12:30:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 12:30:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:30:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 12:30:34[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.357 seconds (process running for 4.868)[0;39m]
[[34m2024-07-09 12:30:35[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.111] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:30:35[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.111] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:30:35[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.111] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 12:30:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:30:41[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 2 msec}[0;39m]
[[34m2024-07-09 12:30:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 12:30:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mStuGetRes - latestGrade: 2[0;39m]
[[34m2024-07-09 12:30:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mList : [][0;39m]
[[34m2024-07-09 12:30:41[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 2 msec}[0;39m]
[[34m2024-07-09 12:30:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 12:30:41[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        score_id AS scoreId,
        stu_id AS stuId,
        CONCAT(2, SUBSTRING(class_id, 2)) AS classId,
        subject_name AS name,
        year AS year,
        exam AS exam,
        mark AS mark,
        class_avg AS classAvg,
        class_rank AS classRank,
        school_avg AS schoolRank,
        midterm_avg AS midtermAvg,
        final_avg AS finalAvg,
        subject_avg AS subjectAvg

            FROM view_score_semester1

         WHERE stu_id = 1
            AND SUBSTRING(class_id, 1, 1) = 2
 {executed in 3 msec}[0;39m]
[[34m2024-07-09 12:30:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|score_id |stu_id |classid |subject_name |year |exam |mark |class_avg |class_rank |school_avg |midterm_avg |final_avg |subject_avg |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|6        |1      |201     |과학           |2023 |2    |90   |90.0      |1          |90         |[null]      |90.0000   |90.0        |
|7        |1      |201     |국어           |2023 |1    |80   |80.0      |1          |80         |80.0        |[null]    |80.0        |
|36       |1      |201     |미술           |2023 |1    |96   |96.0      |1          |96         |96.0        |[null]    |96.0        |
|1        |1      |201     |수학           |2023 |1    |85   |85.0      |1          |85         |85.0        |[null]    |85.0        |
|34       |1      |201     |영어           |2023 |1    |96   |96.0      |1          |84         |96.0        |[null]    |96.0        |
|30       |1      |201     |과학           |2024 |1    |1    |1.0       |1          |1          |1.0         |[null]    |1.0         |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
[0;39m]
[[34m2024-07-09 12:31:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:31:28[0;39m [31mERROR[0;39mhttp-nio-8080-exec-2] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception[0;39m]
java.io.FileNotFoundException: class path resource [static/index.html] cannot be resolved to URL because it does not exist
	at org.springframework.core.io.ClassPathResource.getURL(ClassPathResource.java:230)
	at org.springframework.core.io.AbstractFileResolvingResource.lastModified(AbstractFileResolvingResource.java:268)
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:598)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 12:32:17[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:32:17[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 12:32:17[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 12:32:21[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 12:32:21[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 13184 (D:\backEnd\java\fefu\build\classes\java\main started by Administrator in D:\backEnd\java\fefu)[0;39m]
[[34m2024-07-09 12:32:21[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 12:32:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 12:32:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 12:32:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 12:32:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 12:32:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 12:32:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:32:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 12:32:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 12:32:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 12:32:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1634 ms[0;39m]
[[34m2024-07-09 12:32:22[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 12:32:23[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6e785212[0;39m]
[[34m2024-07-09 12:32:23[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 12:32:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 12:32:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 12:32:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 12:32:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 12:32:23[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 12:32:23[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 12:32:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 12:32:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:32:24[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 12:32:24[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 12:32:24[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 12:32:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:32:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 12:32:25[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.458 seconds (process running for 4.977)[0;39m]
[[34m2024-07-09 12:32:25[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.111] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:32:25[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.111] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:32:25[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.111] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 12:32:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:32:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:32:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:33:20[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:33:20[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 12:33:20[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 12:33:23[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 12:33:23[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 5244 (D:\backEnd\java\fefu\build\classes\java\main started by Administrator in D:\backEnd\java\fefu)[0;39m]
[[34m2024-07-09 12:33:23[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 12:33:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 12:33:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 12:33:24[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 12:33:24[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1675 ms[0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@673c4cc3[0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 12:33:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 12:33:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 12:33:26[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 12:33:26[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 12:33:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 12:33:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:33:26[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 12:33:27[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 12:33:27[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 12:33:27[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:33:27[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 12:33:27[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.472 seconds (process running for 4.99)[0;39m]
[[34m2024-07-09 12:33:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:33:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:33:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 1 ms[0;39m]
[[34m2024-07-09 12:33:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:33:27[0;39m [31mERROR[0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception[0;39m]
java.io.FileNotFoundException: class path resource [static/index.html] cannot be resolved to URL because it does not exist
	at org.springframework.core.io.ClassPathResource.getURL(ClassPathResource.java:230)
	at org.springframework.core.io.AbstractFileResolvingResource.lastModified(AbstractFileResolvingResource.java:268)
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:598)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 12:33:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:33:39[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 3 msec}[0;39m]
[[34m2024-07-09 12:33:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 12:33:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mStuGetRes - latestGrade: 2[0;39m]
[[34m2024-07-09 12:33:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mList : [][0;39m]
[[34m2024-07-09 12:33:39[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 2 msec}[0;39m]
[[34m2024-07-09 12:33:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 12:33:39[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        score_id AS scoreId,
        stu_id AS stuId,
        CONCAT(2, SUBSTRING(class_id, 2)) AS classId,
        subject_name AS name,
        year AS year,
        exam AS exam,
        mark AS mark,
        class_avg AS classAvg,
        class_rank AS classRank,
        school_avg AS schoolRank,
        midterm_avg AS midtermAvg,
        final_avg AS finalAvg,
        subject_avg AS subjectAvg

            FROM view_score_semester1

         WHERE stu_id = 1
            AND SUBSTRING(class_id, 1, 1) = 2
 {executed in 2 msec}[0;39m]
[[34m2024-07-09 12:33:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|score_id |stu_id |classid |subject_name |year |exam |mark |class_avg |class_rank |school_avg |midterm_avg |final_avg |subject_avg |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|6        |1      |201     |과학           |2023 |2    |90   |90.0      |1          |90         |[null]      |90.0000   |90.0        |
|7        |1      |201     |국어           |2023 |1    |80   |80.0      |1          |80         |80.0        |[null]    |80.0        |
|36       |1      |201     |미술           |2023 |1    |96   |96.0      |1          |96         |96.0        |[null]    |96.0        |
|1        |1      |201     |수학           |2023 |1    |85   |85.0      |1          |85         |85.0        |[null]    |85.0        |
|34       |1      |201     |영어           |2023 |1    |96   |96.0      |1          |84         |96.0        |[null]    |96.0        |
|30       |1      |201     |과학           |2024 |1    |1    |1.0       |1          |1          |1.0         |[null]    |1.0         |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
[0;39m]
[[34m2024-07-09 12:33:58[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:33:58[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 12:33:58[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 12:34:01[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 12:34:01[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 12356 (D:\backEnd\java\fefu\build\classes\java\main started by Administrator in D:\backEnd\java\fefu)[0;39m]
[[34m2024-07-09 12:34:01[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 12:34:01[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 12:34:01[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 12:34:02[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 12:34:02[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 16 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1697 ms[0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@631d7bb6[0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 12:34:03[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 12:34:03[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 12:34:04[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 12:34:04[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:34:04[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 12:34:04[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 12:34:05[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 12:34:05[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:34:05[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 12:34:05[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.395 seconds (process running for 4.906)[0;39m]
[[34m2024-07-09 12:34:05[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.111] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:34:05[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.111] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:34:05[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.111] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 1 ms[0;39m]
[[34m2024-07-09 12:34:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 380 ms[0;39m]
[[34m2024-07-09 12:34:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        score_id AS scoreId,
        stu_id AS stuId,
        CONCAT(0, SUBSTRING(class_id, 2)) AS classId,
        subject_name AS name,
        year AS year,
        exam AS exam,
        mark AS mark,
        class_avg AS classAvg,
        class_rank AS classRank,
        school_avg AS schoolRank,
        midterm_avg AS midtermAvg,
        final_avg AS finalAvg,
        subject_avg AS subjectAvg

            FROM view_score_semester1

         WHERE stu_id = 1
            AND SUBSTRING(class_id, 1, 1) = 1
 {executed in 4 msec}[0;39m]
[[34m2024-07-09 12:34:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|score_id |stu_id |classid |subject_name |year |exam |mark |class_avg |class_rank |school_avg |midterm_avg |final_avg |subject_avg |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|35       |1      |001     |미술           |2023 |1    |96   |96.0      |1          |96         |96.0        |[null]    |96.0        |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
[0;39m]
[[34m2024-07-09 12:34:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:34:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        score_id AS scoreId,
        stu_id AS stuId,
        CONCAT(0, SUBSTRING(class_id, 2)) AS classId,
        subject_name AS name,
        year AS year,
        exam AS exam,
        mark AS mark,
        class_avg AS classAvg,
        class_rank AS classRank,
        school_avg AS schoolRank,
        midterm_avg AS midtermAvg,
        final_avg AS finalAvg,
        subject_avg AS subjectAvg

            FROM view_score_semester2

         WHERE stu_id = 1
            AND SUBSTRING(class_id, 1, 1) = 1
 {executed in 2 msec}[0;39m]
[[34m2024-07-09 12:34:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|score_id |stu_id |classid |subject_name |year |exam |mark |class_avg |class_rank |school_avg |midterm_avg |final_avg |subject_avg |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
[0;39m]
[[34m2024-07-09 12:34:32[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:34:32[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 12:34:32[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[2024-07-09 12:37:27 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 12:37:27 INFO Test worker] [com.green.fefu.teacher.service.TeacherMapperTest] [Starting TeacherMapperTest using Java 17.0.11 with PID 844 (started by Administrator in D:\Students\BCH\backEnd\fefu)]
[2024-07-09 12:37:27 INFO Test worker] [com.green.fefu.teacher.service.TeacherMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 12:37:27 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 12:37:27 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@103c97ff]
[2024-07-09 12:37:27 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 12:37:27 INFO Test worker] [com.green.fefu.teacher.service.TeacherMapperTest] [Started TeacherMapperTest in 1.142 seconds (process running for 2.032)]
[2024-07-09 12:37:28 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 1 msec}]
[2024-07-09 12:37:28 INFO Test worker] [jdbc.resultsettable] [
|---------|
|class_id |
|---------|
|101      |
|---------|
]
[2024-07-09 12:37:28 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 10
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}]
[2024-07-09 12:37:28 INFO Test worker] [jdbc.resultsettable] [
|---------|
|class_id |
|---------|
|502      |
|---------|
]
[2024-07-09 12:37:28 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 12:37:28 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[[34m2024-07-09 12:38:34[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 12:38:34[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 4504 (D:\backEnd\java\fefu\build\classes\java\main started by Administrator in D:\backEnd\java\fefu)[0;39m]
[[34m2024-07-09 12:38:34[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 12:38:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 12:38:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 12:38:35[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 12:38:35[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 13 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1645 ms[0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5e195a6b[0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 12:38:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 12:38:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 12:38:37[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 12:38:37[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 12:38:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 12:38:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:38:37[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 12:38:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 12:38:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 12:38:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:38:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 12:38:38[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.391 seconds (process running for 4.894)[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:38:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 414 ms[0;39m]
[[34m2024-07-09 12:40:49[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:40:49[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 12:40:49[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 12:42:20[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 12:42:20[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 10852 (D:\backEnd\java\fefu\build\classes\java\main started by Administrator in D:\backEnd\java\fefu)[0;39m]
[[34m2024-07-09 12:42:20[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 12:42:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 12:42:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 12:42:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 12:42:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 12:42:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 12:42:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:42:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 12:42:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 12:42:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 12:42:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1616 ms[0;39m]
[[34m2024-07-09 12:42:22[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 12:42:22[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@8545ea1[0;39m]
[[34m2024-07-09 12:42:22[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 12:42:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 12:42:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 12:42:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 12:42:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 12:42:22[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 12:42:22[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 12:42:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 12:42:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:42:23[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 12:42:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.461 seconds (process running for 4.987)[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:42:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:42:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 412 ms[0;39m]
[[34m2024-07-09 12:42:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:42:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 3 msec}[0;39m]
[[34m2024-07-09 12:42:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 12:42:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mStuGetRes - latestGrade: 2[0;39m]
[[34m2024-07-09 12:42:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mList : [][0;39m]
[[34m2024-07-09 12:42:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 12:42:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 12:42:36[0;39m [31mERROR[0;39mhttp-nio-8080-exec-10] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause[0;39m]
org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'semester' in 'class com.green.fefu.score.model.GetScoreReq'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:385)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:160)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:153)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:116)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap.get(DynamicContext.java:102)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:112)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:3344)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:121)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTEq.getValueBody(ASTEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:586)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:550)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy155.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy162.getScore(Unknown Source)
	at com.green.fefu.score.ScoreServiceImpl.getScore(ScoreServiceImpl.java:41)
	at com.green.fefu.score.ScoreControllerImpl.getScore(ScoreControllerImpl.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 12:43:15[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:43:15[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 12:43:15[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 12:43:18[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 12:43:18[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 12940 (D:\backEnd\java\fefu\build\classes\java\main started by Administrator in D:\backEnd\java\fefu)[0;39m]
[[34m2024-07-09 12:43:18[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 12:43:18[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 12:43:18[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 12:43:19[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 12:43:19[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1610 ms[0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@38e32b4e[0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 12:43:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 12:43:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 12:43:21[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 4 msec}[0;39m]
[[34m2024-07-09 12:43:21[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 12:43:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 12:43:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 12:43:21[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 12:43:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 12:43:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 12:43:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 12:43:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 12:43:22[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.442 seconds (process running for 4.996)[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.111] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.111] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.111] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 1 ms[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 3 msec}[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mStuGetRes - latestGrade: 2[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mList : [][0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 2 msec}[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        score_id AS scoreId,
        stu_id AS stuId,
        CONCAT(2, SUBSTRING(class_id, 2)) AS classId,
        subject_name AS name,
        year AS year,
        exam AS exam,
        mark AS mark,
        class_avg AS classAvg,
        class_rank AS classRank,
        school_avg AS schoolRank,
        midterm_avg AS midtermAvg,
        final_avg AS finalAvg,
        subject_avg AS subjectAvg

            FROM view_score_semester1

         WHERE stu_id = 1
            AND SUBSTRING(class_id, 1, 1) = 2
 {executed in 4 msec}[0;39m]
[[34m2024-07-09 12:43:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|score_id |stu_id |classid |subject_name |year |exam |mark |class_avg |class_rank |school_avg |midterm_avg |final_avg |subject_avg |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|6        |1      |201     |과학           |2023 |2    |90   |90.0      |1          |90         |[null]      |90.0000   |90.0        |
|7        |1      |201     |국어           |2023 |1    |80   |80.0      |1          |80         |80.0        |[null]    |80.0        |
|36       |1      |201     |미술           |2023 |1    |96   |96.0      |1          |96         |96.0        |[null]    |96.0        |
|1        |1      |201     |수학           |2023 |1    |85   |85.0      |1          |85         |85.0        |[null]    |85.0        |
|34       |1      |201     |영어           |2023 |1    |96   |96.0      |1          |84         |96.0        |[null]    |96.0        |
|30       |1      |201     |과학           |2024 |1    |1    |1.0       |1          |1          |1.0         |[null]    |1.0         |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
[0;39m]
[[34m2024-07-09 12:43:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 12:43:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 12:43:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 12:43:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        score_id AS scoreId,
        stu_id AS stuId,
        CONCAT(0, SUBSTRING(class_id, 2)) AS classId,
        subject_name AS name,
        year AS year,
        exam AS exam,
        mark AS mark,
        class_avg AS classAvg,
        class_rank AS classRank,
        school_avg AS schoolRank,
        midterm_avg AS midtermAvg,
        final_avg AS finalAvg,
        subject_avg AS subjectAvg

            FROM view_score_semester1

         WHERE stu_id = 1
            AND SUBSTRING(class_id, 1, 1) = 1
 {executed in 2 msec}[0;39m]
[[34m2024-07-09 12:43:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|score_id |stu_id |classid |subject_name |year |exam |mark |class_avg |class_rank |school_avg |midterm_avg |final_avg |subject_avg |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|35       |1      |001     |미술           |2023 |1    |96   |96.0      |1          |96         |96.0        |[null]    |96.0        |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
[0;39m]
[[34m2024-07-09 13:01:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 13:01:44[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 2 msec}[0;39m]
[[34m2024-07-09 13:01:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 13:01:44[0;39m [31mERROR[0;39mhttp-nio-8080-exec-4] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: 잘못된 학년입니다.] with root cause[0;39m]
java.lang.RuntimeException: 잘못된 학년입니다.
	at com.green.fefu.score.ScoreServiceImpl.getDetailScore(ScoreServiceImpl.java:65)
	at com.green.fefu.score.ScoreControllerImpl.getDetailScore(ScoreControllerImpl.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 13:01:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 13:01:59[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 3
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 3
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 13:01:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|4        |3      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 13:01:59[0;39m [31mERROR[0;39mhttp-nio-8080-exec-5] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: 잘못된 학년입니다.] with root cause[0;39m]
java.lang.RuntimeException: 잘못된 학년입니다.
	at com.green.fefu.score.ScoreServiceImpl.getDetailScore(ScoreServiceImpl.java:65)
	at com.green.fefu.score.ScoreControllerImpl.getDetailScore(ScoreControllerImpl.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 13:02:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 13:02:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 3
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 3
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 13:02:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|4        |3      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 13:02:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        score_id AS scoreId,
        stu_id AS stuId,
        CONCAT(0, SUBSTRING(class_id, 2)) AS classId,
        subject_name AS name,
        year AS year,
        exam AS exam,
        mark AS mark,
        class_avg AS classAvg,
        class_rank AS classRank,
        school_avg AS schoolRank,
        midterm_avg AS midtermAvg,
        final_avg AS finalAvg,
        subject_avg AS subjectAvg

            FROM view_score_semester1

         WHERE stu_id = 3
            AND SUBSTRING(class_id, 1, 1) = 2
 {executed in 5 msec}[0;39m]
[[34m2024-07-09 13:02:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|score_id |stu_id |classid |subject_name |year |exam |mark |class_avg |class_rank |school_avg |midterm_avg |final_avg |subject_avg |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
[0;39m]
[[34m2024-07-09 13:20:01[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 13:20:01[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 13:20:01[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 14:46:36[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 14:46:36[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 14832 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 14:46:36[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 14:46:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 14:46:36[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 14:46:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 14:46:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 11 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 14:46:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 14:46:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 14:46:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 14:46:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 14:46:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 14:46:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1632 ms[0;39m]
[[34m2024-07-09 14:46:38[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 14:46:38[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5db4c05a[0;39m]
[[34m2024-07-09 14:46:38[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 14:46:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 14:46:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 14:46:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 14:46:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 14:46:38[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 14:46:38[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 14:46:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 14:46:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 14:46:39[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 14:46:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 14:46:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 14:46:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 14:46:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 14:46:39[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.215 seconds (process running for 4.641)[0;39m]
[[34m2024-07-09 14:46:40[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 14:46:40[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 14:46:40[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 14:46:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 359 ms[0;39m]
[[34m2024-07-09 14:46:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:46:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 176 ms[0;39m]
[[34m2024-07-09 14:47:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 156 ms[0;39m]
[[34m2024-07-09 14:47:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 148 ms[0;39m]
[[34m2024-07-09 14:47:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:47:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 165 ms[0;39m]
[[34m2024-07-09 14:48:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:48:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:48:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:48:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:48:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:48:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:48:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:48:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:48:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:48:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 151 ms[0;39m]
[2024-07-09 14:51:03 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 14:51:03 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 6444 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 14:51:03 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [The following 1 profile is active: "tdd"]
[2024-07-09 14:51:04 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 14:51:04 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@35fa450f]
[2024-07-09 14:51:04 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 14:51:04 WARN Test worker] [org.mariadb.jdbc.message.server.ErrorPacket] [Error: 1050-42S01: Table 'parents' already exists]
[2024-07-09 14:51:04 ERRORTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
 {FAILED after 1 msec}]
java.sql.SQLSyntaxErrorException: (conn=1536) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
[2024-07-09 14:51:04 WARN Test worker] [org.springframework.context.annotation.AnnotationConfigApplicationContext] [Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )]
[2024-07-09 14:51:04 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 14:51:04 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-09 14:51:04 INFO Test worker] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.]
[2024-07-09 14:51:04 ERRORTest worker] [org.springframework.boot.SpringApplication] [Application run failed]
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 109 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=1536) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 119 common frames omitted
[2024-07-09 14:51:04 WARN Test worker] [org.springframework.test.context.TestContextManager] [Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.green.fefu.parents.ParentsUserMapperTest@374c3975]]
java.lang.IllegalStateException: Failed to load ApplicationContext for [MergedContextConfiguration@5618fc1f testClass = com.green.fefu.parents.ParentsUserMapperTest, locations = [], classes = [com.green.fefu.FefuApplication], contextInitializerClasses = [], activeProfiles = ["tdd"], propertySourceDescriptors = [], propertySourceProperties = ["org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@75c9e76b, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@d7f3f2ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@160ac7fb, [ImportsContextCustomizer@60b1ff3b key = [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3234f74e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@40e10ff8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a7f23d94], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 86 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 109 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=1536) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 119 common frames omitted
[[34m2024-07-09 14:52:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:52:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 156 ms[0;39m]
[[34m2024-07-09 14:53:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:53:07[0;39m [31mERROR[0;39mhttp-nio-8080-exec-6] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.] with root cause[0;39m]
java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.
	at com.green.fefu.parents.ParentsUserServiceImpl.postParentsUser(ParentsUserServiceImpl.java:65)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.postParentsUser(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.postParents(ParentsUserControllerImpl.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 14:53:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:53:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:53:49[0;39m [31mERROR[0;39mhttp-nio-8080-exec-3] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.] with root cause[0;39m]
java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.
	at com.green.fefu.parents.ParentsUserServiceImpl.postParentsUser(ParentsUserServiceImpl.java:65)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.postParentsUser(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.postParents(ParentsUserControllerImpl.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 14:53:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:54:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:54:49[0;39m [31mERROR[0;39mhttp-nio-8080-exec-4] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.] with root cause[0;39m]
java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.
	at com.green.fefu.parents.ParentsUserServiceImpl.postParentsUser(ParentsUserServiceImpl.java:65)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.postParentsUser(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.postParents(ParentsUserControllerImpl.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 14:55:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:55:06[0;39m [31mERROR[0;39mhttp-nio-8080-exec-6] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.] with root cause[0;39m]
java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.
	at com.green.fefu.parents.ParentsUserServiceImpl.postParentsUser(ParentsUserServiceImpl.java:65)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.postParentsUser(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.postParents(ParentsUserControllerImpl.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 14:55:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:55:21[0;39m [31mERROR[0;39mhttp-nio-8080-exec-9] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.] with root cause[0;39m]
java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.
	at com.green.fefu.parents.ParentsUserServiceImpl.postParentsUser(ParentsUserServiceImpl.java:65)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.postParentsUser(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.postParents(ParentsUserControllerImpl.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 14:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:55:43[0;39m [31mERROR[0;39mhttp-nio-8080-exec-8] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.] with root cause[0;39m]
java.lang.IllegalArgumentException: 비밀번호 형식이 잘못되었습니다.
	at com.green.fefu.parents.ParentsUserServiceImpl.postParentsUser(ParentsUserServiceImpl.java:65)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.postParentsUser(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.postParents(ParentsUserControllerImpl.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-07-09 14:55:57 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 14:55:57 INFO Test worker] [com.green.fefu.parents.ParentsUserControllerTest] [Starting ParentsUserControllerTest using Java 17.0.11 with PID 4852 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 14:55:57 INFO Test worker] [com.green.fefu.parents.ParentsUserControllerTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 14:55:59 WARN Test worker] [org.springframework.web.context.support.GenericWebApplicationContext] [Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'parentsUserControllerImpl' defined in file [D:\2024-01\backEnd\fefu\build\classes\java\main\com\green\fefu\parents\ParentsUserControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.green.fefu.parents.ParentsUserServiceImpl' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}]
[2024-07-09 14:55:59 INFO Test worker] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.]
[2024-07-09 14:55:59 ERRORTest worker] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] [

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.green.fefu.parents.ParentsUserControllerImpl required a bean of type 'com.green.fefu.parents.ParentsUserServiceImpl' that could not be found.


Action:

Consider defining a bean of type 'com.green.fefu.parents.ParentsUserServiceImpl' in your configuration.
]
[2024-07-09 14:55:59 WARN Test worker] [org.springframework.test.context.TestContextManager] [Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener] to prepare test instance [com.green.fefu.parents.ParentsUserControllerTest@4ede035e]]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@111fe921 testClass = com.green.fefu.parents.ParentsUserControllerTest, locations = [], classes = [com.green.fefu.FefuApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6f2cb653, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@92626caf, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@26c996de, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@26a4842b, [ImportsContextCustomizer@36e3321e key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, com.green.fefu.security.SecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, com.green.fefu.CharEncodingConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@427b5f92, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34625ccd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@e10ae372, org.springframework.boot.test.context.SpringBootTestAnnotation@1ff0968b], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:122)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:106)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:63)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'parentsUserControllerImpl' defined in file [D:\2024-01\backEnd\fefu\build\classes\java\main\com\green\fefu\parents\ParentsUserControllerImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.green.fefu.parents.ParentsUserServiceImpl' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 87 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.green.fefu.parents.ParentsUserServiceImpl' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1880)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1406)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 111 common frames omitted
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:57:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 145 ms[0;39m]
[[34m2024-07-09 14:58:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:59:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 14:59:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO parents
        SET uid = 'testid1'
            , upw = '$2a$10$oEzWDhrXMerxrXpuMmlgWuKUY7CG9/j2IkxKgR/sjO6kj4hmjwLGC'
            , nm = '김나박'
            , phone = '010-0001-0001'
            , sub_phone = '010-0002-0002'
            , email = NULL
            , connet = '부'
            , addr = '18811#경기 여주시 대신면 도롱1길 2 여기'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 14:59:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO parents
        SET uid = 'testid1'
            , upw = '$2a$10$oEzWDhrXMerxrXpuMmlgWuKUY7CG9/j2IkxKgR/sjO6kj4hmjwLGC'
            , nm = '김나박'
            , phone = '010-0001-0001'
            , sub_phone = '010-0002-0002'
            , email = NULL
            , connet = '부'
            , addr = '18811#경기 여주시 대신면 도롱1길 2 여기'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 14:59:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|----------|
|insert_id |
|----------|
|39        |
|----------|
[0;39m]
[[34m2024-07-09 15:00:19[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 7 class path changes (0 additions, 0 deletions, 7 modifications)[0;39m]
[[34m2024-07-09 15:00:19[0;39m [32mINFO [0;39mThread-5] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 15:00:19[0;39m [32mINFO [0;39mThread-5] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 15:00:19[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 15:00:19[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 15:00:19[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 14832 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 15:00:19[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 8 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 595 ms[0;39m]
[2024-07-09 15:00:20 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:00:20 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 5480 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:00:20 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [The following 1 profile is active: "tdd"]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Starting...[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5191cbee[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Start completed.[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:00:20[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 15:00:20[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 15:00:21[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 15:00:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[2024-07-09 15:00:21 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:00:21 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5f0f70c7]
[2024-07-09 15:00:21 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:00:21 WARN Test worker] [org.mariadb.jdbc.message.server.ErrorPacket] [Error: 1050-42S01: Table 'parents' already exists]
[2024-07-09 15:00:21 ERRORTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
 {FAILED after 0 msec}]
java.sql.SQLSyntaxErrorException: (conn=1587) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
[2024-07-09 15:00:21 WARN Test worker] [org.springframework.context.annotation.AnnotationConfigApplicationContext] [Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )]
[2024-07-09 15:00:21 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:00:21 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-09 15:00:21 INFO Test worker] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.]
[2024-07-09 15:00:21 ERRORTest worker] [org.springframework.boot.SpringApplication] [Application run failed]
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 109 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=1587) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 119 common frames omitted
[2024-07-09 15:00:21 WARN Test worker] [org.springframework.test.context.TestContextManager] [Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.green.fefu.parents.ParentsUserMapperTest@566c1e71]]
java.lang.IllegalStateException: Failed to load ApplicationContext for [MergedContextConfiguration@3b28b7b0 testClass = com.green.fefu.parents.ParentsUserMapperTest, locations = [], classes = [com.green.fefu.FefuApplication], contextInitializerClasses = [], activeProfiles = ["tdd"], propertySourceDescriptors = [], propertySourceProperties = ["org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@75c9e76b, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@d7f3f2ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@160ac7fb, [ImportsContextCustomizer@22048bd6 key = [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3234f74e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@40e10ff8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a7f23d94], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 86 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 109 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=1587) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 119 common frames omitted
[[34m2024-07-09 15:00:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 15:00:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 15:00:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 15:00:21[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.763 seconds (process running for 826.367)[0;39m]
[[34m2024-07-09 15:00:21[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 15:04:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 15:04:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 15:04:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 1 ms[0;39m]
[[34m2024-07-09 15:04:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:06:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:06:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=test1234, password=Test1234!@#$, name=홍길동, phone=010-0000-0000, email=test1234@naver.com, gender=남, birth=2024-06-28, zoneCode=12345, addr=서울 판교 1234, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-09 15:06:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234[0;39m]
[[34m2024-07-09 15:06:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$MuaNIaSdORXIyADnYzEulObRV1SYtEwVo8dfX6sesbXUtyiOZl3bK[0;39m]
[[34m2024-07-09 15:06:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 홍길동[0;39m]
[[34m2024-07-09 15:06:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234@naver.com[0;39m]
[[34m2024-07-09 15:06:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-0000-0000[0;39m]
[[34m2024-07-09 15:06:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 남[0;39m]
[[34m2024-07-09 15:06:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 12345 # 서울 판교 1234[0;39m]
[[34m2024-07-09 15:06:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 15:06:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 15:06:59[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TEACHER
         SET uid = 'test1234',
            upw = '$2a$10$MuaNIaSdORXIyADnYzEulObRV1SYtEwVo8dfX6sesbXUtyiOZl3bK',
            nm = '홍길동',
            phone = '010-0000-0000',
            email = 'test1234@naver.com',
            gender = '남',

                birth = '2024-06-28',

                addr = '12345 # 서울 판교 1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 15:06:59[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO TEACHER
         SET uid = 'test1234',
            upw = '$2a$10$MuaNIaSdORXIyADnYzEulObRV1SYtEwVo8dfX6sesbXUtyiOZl3bK',
            nm = '홍길동',
            phone = '010-0000-0000',
            email = 'test1234@naver.com',
            gender = '남',

                birth = '2024-06-28',

                addr = '12345 # 서울 판교 1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:06:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|----------|
|insert_id |
|----------|
|30        |
|----------|
[0;39m]
[[34m2024-07-09 15:08:51[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 15:08:51[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown initiated...[0;39m]
[[34m2024-07-09 15:08:51[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown completed.[0;39m]
[[34m2024-07-09 15:08:54[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 15:08:54[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10052 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 15:08:54[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 15:08:54[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 15:08:54[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 15:08:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 15:08:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 15:08:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 15:08:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 15:08:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 15:08:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 15:08:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 15:08:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1736 ms[0;39m]
[[34m2024-07-09 15:08:56[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 15:08:56[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42c77852[0;39m]
[[34m2024-07-09 15:08:56[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 15:08:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 15:08:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 15:08:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 15:08:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 15:08:56[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:08:56[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 15:08:57[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 15:08:57[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 15:08:57[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 15:08:57[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 15:08:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 15:08:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 15:08:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 15:08:58[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.662 seconds (process running for 5.123)[0;39m]
[[34m2024-07-09 15:08:58[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 15:08:58[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 15:08:58[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 15:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 371 ms[0;39m]
[[34m2024-07-09 15:09:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 218 ms[0;39m]
[[34m2024-07-09 15:09:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:09:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 165 ms[0;39m]
[2024-07-09 15:09:55 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:09:55 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 15432 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:09:55 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [The following 1 profile is active: "tdd"]
[2024-07-09 15:09:55 INFO Test worker] [org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor] [Replacing 'dataSource' DataSource bean with embedded version]
[2024-07-09 15:09:55 WARN Test worker] [org.springframework.context.annotation.AnnotationConfigApplicationContext] [Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0: Error creating bean with name 'dataSource': Failed to replace DataSource with an embedded database for tests. If you want an embedded database please put a supported one on the classpath or tune the replace attribute of @AutoConfigureTestDatabase.]
[2024-07-09 15:09:55 INFO Test worker] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.]
[2024-07-09 15:09:55 ERRORTest worker] [org.springframework.boot.SpringApplication] [Application run failed]
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0: Error creating bean with name 'dataSource': Failed to replace DataSource with an embedded database for tests. If you want an embedded database please put a supported one on the classpath or tune the replace attribute of @AutoConfigureTestDatabase.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource': Failed to replace DataSource with an embedded database for tests. If you want an embedded database please put a supported one on the classpath or tune the replace attribute of @AutoConfigureTestDatabase.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 110 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to replace DataSource with an embedded database for tests. If you want an embedded database please put a supported one on the classpath or tune the replace attribute of @AutoConfigureTestDatabase.
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactory.getEmbeddedDatabase(TestDatabaseAutoConfiguration.java:188)
	at org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactoryBean.afterPropertiesSet(TestDatabaseAutoConfiguration.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 121 common frames omitted
[2024-07-09 15:09:55 WARN Test worker] [org.springframework.test.context.TestContextManager] [Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.green.fefu.parents.ParentsUserMapperTest@668cc9a2]]
java.lang.IllegalStateException: Failed to load ApplicationContext for [MergedContextConfiguration@2a8f6e6 testClass = com.green.fefu.parents.ParentsUserMapperTest, locations = [], classes = [com.green.fefu.FefuApplication], contextInitializerClasses = [], activeProfiles = ["tdd"], propertySourceDescriptors = [], propertySourceProperties = ["org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6f8f9349, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@d64cfd37, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3dddefd8, [ImportsContextCustomizer@1ac730cd key = [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5ed731d0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@275fe372, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@81d1dc09], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0: Error creating bean with name 'dataSource': Failed to replace DataSource with an embedded database for tests. If you want an embedded database please put a supported one on the classpath or tune the replace attribute of @AutoConfigureTestDatabase.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 86 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource': Failed to replace DataSource with an embedded database for tests. If you want an embedded database please put a supported one on the classpath or tune the replace attribute of @AutoConfigureTestDatabase.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 110 common frames omitted
Caused by: java.lang.IllegalStateException: Failed to replace DataSource with an embedded database for tests. If you want an embedded database please put a supported one on the classpath or tune the replace attribute of @AutoConfigureTestDatabase.
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactory.getEmbeddedDatabase(TestDatabaseAutoConfiguration.java:188)
	at org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactoryBean.afterPropertiesSet(TestDatabaseAutoConfiguration.java:153)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 121 common frames omitted
[[34m2024-07-09 15:11:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:11:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:11:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:11:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:11:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:11:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:11:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:11:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:11:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:11:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:11:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 172 ms[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=test1234, password=Test1234!@#$, name=홍길동, phone=010-0000-0000, email=test1234@naver.com, gender=남, birth=2024-06-28, zoneCode=12345, addr=서울 판교 1234, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$zsB3dm6086u0N/LkbhpQ0O658bNkPrAo/hoFbFVes.oieSTTr7WVa[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 홍길동[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234@naver.com[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-0000-0000[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 남[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 12345 # 서울 판교 1234[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:14:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|-------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
|tea_id |uid      |upw                                                          |nm  |phone         |email              |gender |auth         |birth      |addr               |acept |created_at          |updated_at |
|-------|---------|-------------------------------------------------------------|----|--------------|-------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
|30     |test1234 |$2a$10$MuaNIaSdORXIyADnYzEulObRV1SYtEwVo8dfX6sesbXUtyiOZl3bK |홍길동 |010-0000-0000 |test1234@naver.com |남      |ROLE_TEAHCER |2024-06-28 |12345 # 서울 판교 1234 |2     |2024-07-09 15:06:59 |null       |
|-------|---------|-------------------------------------------------------------|----|--------------|-------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=test12341, password=Test1234!@#$, name=홍길동, phone=010-0000-0000, email=test1234@naver.com, gender=남, birth=2024-06-28, zoneCode=12345, addr=서울 판교 1234, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test12341[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$YqimP6vNGV8wr/rHp.hWL.iCsHxDqbO5G8XlszX1CV903vdimULWq[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 홍길동[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234@naver.com[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-0000-0000[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 남[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 12345 # 서울 판교 1234[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test12341'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:15:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 15:15:10[0;39m [33mWARN [0;39mhttp-nio-8080-exec-8] [[33morg.mariadb.jdbc.message.server.ErrorPacket[0;39m] [[35mError: 1062-23000: Duplicate entry 'test1234@naver.com' for key 'email'[0;39m]
[[34m2024-07-09 15:15:10[0;39m [31mERROR[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TEACHER
         SET uid = 'test12341',
            upw = '$2a$10$YqimP6vNGV8wr/rHp.hWL.iCsHxDqbO5G8XlszX1CV903vdimULWq',
            nm = '홍길동',
            phone = '010-0000-0000',
            email = 'test1234@naver.com',
            gender = '남',

                birth = '2024-06-28',

                addr = '12345 # 서울 판교 1234'
 {FAILED after 1 msec}[0;39m]
java.sql.SQLIntegrityConstraintViolationException: (conn=1628) Duplicate entry 'test1234@naver.com' for key 'email'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy155.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy168.CreateTeacher(Unknown Source)
	at com.green.fefu.teacher.service.TeacherServiceImpl.CreateTeacher(TeacherServiceImpl.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.teacher.service.TeacherServiceImpl$$SpringCGLIB$$0.CreateTeacher(<generated>)
	at com.green.fefu.teacher.service.TeacherControllerImpl.CreateTeacher(TeacherControllerImpl.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=test12341, password=Test1234!@#$, name=홍길동, phone=010-0000-0000, email=test121231@naver.com, gender=남, birth=2024-06-28, zoneCode=12345, addr=서울 판교 1234, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test12341[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$psxXYPp6bYUMDXdfz2HNIe15fGIkcG7MOtnvhJypbxNMoU2anNOzW[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 홍길동[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test121231@naver.com[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-0000-0000[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 남[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 12345 # 서울 판교 1234[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test12341'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TEACHER
         SET uid = 'test12341',
            upw = '$2a$10$psxXYPp6bYUMDXdfz2HNIe15fGIkcG7MOtnvhJypbxNMoU2anNOzW',
            nm = '홍길동',
            phone = '010-0000-0000',
            email = 'test121231@naver.com',
            gender = '남',

                birth = '2024-06-28',

                addr = '12345 # 서울 판교 1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO TEACHER
         SET uid = 'test12341',
            upw = '$2a$10$psxXYPp6bYUMDXdfz2HNIe15fGIkcG7MOtnvhJypbxNMoU2anNOzW',
            nm = '홍길동',
            phone = '010-0000-0000',
            email = 'test121231@naver.com',
            gender = '남',

                birth = '2024-06-28',

                addr = '12345 # 서울 판교 1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 15:15:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|----------|
|insert_id |
|----------|
|32        |
|----------|
[0;39m]
[2024-07-09 15:16:28 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:16:28 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 15864 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:16:28 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [The following 1 profile is active: "tdd"]
[2024-07-09 15:16:29 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:16:29 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1537c744]
[2024-07-09 15:16:29 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:16:29 WARN Test worker] [org.mariadb.jdbc.message.server.ErrorPacket] [Error: 1050-42S01: Table 'parents' already exists]
[2024-07-09 15:16:29 ERRORTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
 {FAILED after 1 msec}]
java.sql.SQLSyntaxErrorException: (conn=1649) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
[2024-07-09 15:16:29 WARN Test worker] [org.springframework.context.annotation.AnnotationConfigApplicationContext] [Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )]
[2024-07-09 15:16:29 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:16:29 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-09 15:16:29 INFO Test worker] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.]
[2024-07-09 15:16:29 ERRORTest worker] [org.springframework.boot.SpringApplication] [Application run failed]
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 109 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=1649) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 119 common frames omitted
[2024-07-09 15:16:29 WARN Test worker] [org.springframework.test.context.TestContextManager] [Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.green.fefu.parents.ParentsUserMapperTest@7b91d9f]]
java.lang.IllegalStateException: Failed to load ApplicationContext for [MergedContextConfiguration@615b5480 testClass = com.green.fefu.parents.ParentsUserMapperTest, locations = [], classes = [com.green.fefu.FefuApplication], contextInitializerClasses = [], activeProfiles = ["tdd"], propertySourceDescriptors = [], propertySourceProperties = ["org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@75c9e76b, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@d7f3f2ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@160ac7fb, [ImportsContextCustomizer@24691c5 key = [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3234f74e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@40e10ff8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a7f23d94], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 86 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 109 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=1649) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 119 common frames omitted
[[34m2024-07-09 15:17:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:17:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:17:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 15:17:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mStuGetRes - latestGrade: 2[0;39m]
[[34m2024-07-09 15:17:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mList : [][0;39m]
[[34m2024-07-09 15:17:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:17:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-09 15:17:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        score_id AS scoreId,
        stu_id AS stuId,
        CONCAT(2, SUBSTRING(class_id, 2)) AS classId,
        subject_name AS name,
        year AS year,
        exam AS exam,
        mark AS mark,
        class_avg AS classAvg,
        class_rank AS classRank,
        school_avg AS schoolRank,
        midterm_avg AS midtermAvg,
        final_avg AS finalAvg,
        subject_avg AS subjectAvg

            FROM view_score_semester1

         WHERE stu_id = 1
            AND SUBSTRING(class_id, 1, 1) = 2
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 15:17:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|score_id |stu_id |classid |subject_name |year |exam |mark |class_avg |class_rank |school_avg |midterm_avg |final_avg |subject_avg |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|6        |1      |201     |과학           |2023 |2    |90   |90.0      |1          |90         |[null]      |90.0000   |90.0        |
|7        |1      |201     |국어           |2023 |1    |80   |80.0      |1          |80         |80.0        |[null]    |80.0        |
|36       |1      |201     |미술           |2023 |1    |96   |96.0      |1          |96         |96.0        |[null]    |96.0        |
|1        |1      |201     |수학           |2023 |1    |85   |85.0      |1          |85         |85.0        |[null]    |85.0        |
|34       |1      |201     |영어           |2023 |1    |96   |96.0      |1          |84         |96.0        |[null]    |96.0        |
|30       |1      |201     |과학           |2024 |1    |1    |1.0       |1          |1          |1.0         |[null]    |1.0         |
|---------|-------|--------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
[0;39m]
[2024-07-09 15:21:50 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:21:50 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 6400 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:21:50 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 15:21:51 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:21:51 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@38cfecf3]
[2024-07-09 15:21:51 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:21:51 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.205 seconds (process running for 2.121)]
[2024-07-09 15:21:52 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = NULL
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:21:52 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = NULL
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:21:52 INFO Test worker] [jdbc.resultsettable] [
|----------|
|insert_id |
|----------|
|40        |
|----------|
]
[2024-07-09 15:21:52 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentsId
                , uid
                , upw
                , nm
                , phone
                , sub_phone AS subPhone
                , email
                , connet
                , auth
                , addr
        FROM parents
        WHERE parents_id = 40
 {executed in 0 msec}]
[2024-07-09 15:21:52 INFO Test worker] [jdbc.resultsettable] [
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|
|parents_id |uid |upw  |nm  |phone         |sub_phone |email |connet |auth         |addr |
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|
|40         |p1  |1212 |홍길동 |010-1234-1234 |null      |null  |부      |ROLE_PARENTS |null |
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|
]
[2024-07-09 15:21:52 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO parents
        SET uid = 'p2'
            , upw = '1212'
            , nm = '김길동'
            , phone = '010-5678-5678'
            , sub_phone = NULL
            , email = NULL
            , connet = '모'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:21:52 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO parents
        SET uid = 'p2'
            , upw = '1212'
            , nm = '김길동'
            , phone = '010-5678-5678'
            , sub_phone = NULL
            , email = NULL
            , connet = '모'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:21:52 INFO Test worker] [jdbc.resultsettable] [
|----------|
|insert_id |
|----------|
|41        |
|----------|
]
[2024-07-09 15:21:52 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentsId
                , uid
                , upw
                , nm
                , phone
                , sub_phone AS subPhone
                , email
                , connet
                , auth
                , addr
        FROM parents
        WHERE parents_id = 41
 {executed in 0 msec}]
[2024-07-09 15:21:52 INFO Test worker] [jdbc.resultsettable] [
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|
|parents_id |uid |upw  |nm  |phone         |sub_phone |email |connet |auth         |addr |
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|
|41         |p2  |1212 |김길동 |010-5678-5678 |null      |null  |모      |ROLE_PARENTS |null |
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|
]
[2024-07-09 15:21:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:21:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-09 15:22:00 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:22:00 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 900 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:22:00 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 15:22:01 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:22:01 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2b79c8ff]
[2024-07-09 15:22:01 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:22:01 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.203 seconds (process running for 2.12)]
[2024-07-09 15:22:02 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = 'tg03067@gmail.com'
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:22:02 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = 'tg03067@gmail.com'
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:22:02 INFO Test worker] [jdbc.resultsettable] [
|----------|
|insert_id |
|----------|
|42        |
|----------|
]
[2024-07-09 15:22:02 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
        FROM parents
         WHERE uid = 'p1'

                and email = 'tg03067@gmail.com'
 {executed in 0 msec}]
[2024-07-09 15:22:02 INFO Test worker] [jdbc.resultsettable] [
|-----------|----|-----|----|--------------|----------|------------------|-------|-------------|-------|------|----------------------|-----------|
|parents_id |uid |upw  |nm  |phone         |sub_phone |email             |connet |auth         |addr   |acept |created_at            |updated_at |
|-----------|----|-----|----|--------------|----------|------------------|-------|-------------|-------|------|----------------------|-----------|
|42         |p1  |1212 |홍길동 |010-1234-1234 |[null]    |tg03067@gmail.com |부      |ROLE_PARENTS |[null] |2     |2024-07-09 15:22:02.0 |[null]     |
|-----------|----|-----|----|--------------|----------|------------------|-------|-------------|-------|------|----------------------|-----------|
]
[2024-07-09 15:22:02 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:22:02 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-09 15:24:00 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:24:00 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 15280 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:24:00 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 15:24:01 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:24:01 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@283ab206]
[2024-07-09 15:24:01 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:24:01 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.199 seconds (process running for 2.11)]
[2024-07-09 15:24:01 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = 'tg03067@gmail.com'
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:24:01 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = 'tg03067@gmail.com'
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:24:01 INFO Test worker] [jdbc.resultsettable] [
|----------|
|insert_id |
|----------|
|43        |
|----------|
]
[2024-07-09 15:24:01 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT *
        FROM parents
         WHERE uid = 'p1'
 {executed in 0 msec}]
[2024-07-09 15:24:01 INFO Test worker] [jdbc.resultsettable] [
|-----------|----|-----|----|--------------|----------|------------------|-------|-------------|-------|------|----------------------|-----------|
|parents_id |uid |upw  |nm  |phone         |sub_phone |email             |connet |auth         |addr   |acept |created_at            |updated_at |
|-----------|----|-----|----|--------------|----------|------------------|-------|-------------|-------|------|----------------------|-----------|
|43         |p1  |1212 |홍길동 |010-1234-1234 |[null]    |tg03067@gmail.com |부      |ROLE_PARENTS |[null] |2     |2024-07-09 15:24:01.0 |[null]     |
|-----------|----|-----|----|--------------|----------|------------------|-------|-------------|-------|------|----------------------|-----------|
]
[2024-07-09 15:24:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:24:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-09 15:24:45 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:24:45 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 15620 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:24:45 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 15:24:46 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:24:46 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@682618e5]
[2024-07-09 15:24:46 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:24:46 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.198 seconds (process running for 2.097)]
[2024-07-09 15:24:47 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = NULL
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:24:47 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = NULL
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:24:47 INFO Test worker] [jdbc.resultsettable] [
|----------|
|insert_id |
|----------|
|44        |
|----------|
]
[2024-07-09 15:24:47 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE parents
        SET upw = '123123'
        WHERE parents_id = 44
 {executed in 0 msec}]
[2024-07-09 15:24:47 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentsId
                , uid
                , upw
                , nm
                , phone
                , sub_phone AS subPhone
                , email
                , connet
                , auth
                , addr
        FROM parents
        WHERE parents_id = 0
 {executed in 0 msec}]
[2024-07-09 15:24:47 INFO Test worker] [jdbc.resultsettable] [
|-----------|----|----|---|------|----------|------|-------|-----|-----|
|parents_id |uid |upw |nm |phone |sub_phone |email |connet |auth |addr |
|-----------|----|----|---|------|----------|------|-------|-----|-----|
|-----------|----|----|---|------|----------|------|-------|-----|-----|
]
[2024-07-09 15:24:47 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:24:47 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-09 15:24:53 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:24:53 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 7848 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:24:53 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 15:24:54 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:24:54 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@77896335]
[2024-07-09 15:24:54 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:24:54 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.181 seconds (process running for 2.091)]
[2024-07-09 15:24:55 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = NULL
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-09 15:24:55 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = NULL
            , connet = '부'
            , addr = NULL
 {executed in 16 msec}]
[2024-07-09 15:24:55 INFO Test worker] [jdbc.resultsettable] [
|----------|
|insert_id |
|----------|
|45        |
|----------|
]
[2024-07-09 15:24:55 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentsId
                , uid
                , upw
                , nm
                , phone
                , sub_phone AS subPhone
                , email
                , connet
                , auth
                , addr
                , acept
                , created_at AS createdAt
                , updated_at AS updatedAt
        FROM parents
        WHERE uid = 'p1'
 {executed in 0 msec}]
[2024-07-09 15:24:55 INFO Test worker] [jdbc.resultsettable] [
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|------|--------------------|-----------|
|parents_id |uid |upw  |nm  |phone         |sub_phone |email |connet |auth         |addr |acept |created_at          |updated_at |
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|------|--------------------|-----------|
|45         |p1  |1212 |홍길동 |010-1234-1234 |null      |null  |부      |ROLE_PARENTS |null |2     |2024-07-09 15:24:55 |null       |
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|------|--------------------|-----------|
]
[2024-07-09 15:24:55 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentId
        , uid
        , upw
        , nm
        , phone
        , sub_phone AS subPhone
        , email
        , connet
        , auth
        , addr
        , acept
        , created_at AS createdAt
        , updated_at AS updatedAt
        FROM parents
         WHERE parents_id = 45 
        ORDER BY parents_id
 {executed in 0 msec}]
[2024-07-09 15:24:55 INFO Test worker] [jdbc.resultsettable] [
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|------|--------------------|-----------|
|parents_id |uid |upw  |nm  |phone         |sub_phone |email |connet |auth         |addr |acept |created_at          |updated_at |
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|------|--------------------|-----------|
|45         |p1  |1212 |홍길동 |010-1234-1234 |null      |null  |부      |ROLE_PARENTS |null |2     |2024-07-09 15:24:55 |null       |
|-----------|----|-----|----|--------------|----------|------|-------|-------------|-----|------|--------------------|-----------|
]
[2024-07-09 15:24:55 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentsId
                , uid
                , upw
                , nm
                , phone
                , sub_phone AS subPhone
                , email
                , connet
                , auth
                , addr
                , acept
                , created_at AS createdAt
                , updated_at AS updatedAt
        FROM parents
        WHERE uid = 'asdf'
 {executed in 0 msec}]
[2024-07-09 15:24:55 INFO Test worker] [jdbc.resultsettable] [
|-----------|----|----|---|------|----------|------|-------|-----|-----|------|-----------|-----------|
|parents_id |uid |upw |nm |phone |sub_phone |email |connet |auth |addr |acept |created_at |updated_at |
|-----------|----|----|---|------|----------|------|-------|-----|-----|------|-----------|-----------|
|-----------|----|----|---|------|----------|------|-------|-----|-----|------|-----------|-----------|
]
[2024-07-09 15:24:55 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:24:55 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 148 ms[0;39m]
[[34m2024-07-09 15:30:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:30:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=test1234, email=null)[0;39m]
[[34m2024-07-09 15:30:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:30:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|-------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
|tea_id |uid      |upw                                                          |nm  |phone         |email              |gender |auth         |birth      |addr               |acept |created_at          |updated_at |
|-------|---------|-------------------------------------------------------------|----|--------------|-------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
|30     |test1234 |$2a$10$MuaNIaSdORXIyADnYzEulObRV1SYtEwVo8dfX6sesbXUtyiOZl3bK |홍길동 |010-0000-0000 |test1234@naver.com |남      |ROLE_TEAHCER |2024-06-28 |12345 # 서울 판교 1234 |2     |2024-07-09 15:06:59 |null       |
|-------|---------|-------------------------------------------------------------|----|--------------|-------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
[0;39m]
[[34m2024-07-09 15:30:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:30:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=test12341, email=null)[0;39m]
[[34m2024-07-09 15:30:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test12341'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:30:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----------|-------------------------------------------------------------|----|--------------|---------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
|tea_id |uid       |upw                                                          |nm  |phone         |email                |gender |auth         |birth      |addr               |acept |created_at          |updated_at |
|-------|----------|-------------------------------------------------------------|----|--------------|---------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
|32     |test12341 |$2a$10$psxXYPp6bYUMDXdfz2HNIe15fGIkcG7MOtnvhJypbxNMoU2anNOzW |홍길동 |010-0000-0000 |test121231@naver.com |남      |ROLE_TEAHCER |2024-06-28 |12345 # 서울 판교 1234 |2     |2024-07-09 15:15:25 |null       |
|-------|----------|-------------------------------------------------------------|----|--------------|---------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
[0;39m]
[[34m2024-07-09 15:30:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:30:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=test12341!, email=null)[0;39m]
[[34m2024-07-09 15:30:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:30:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=test12341421, email=null)[0;39m]
[[34m2024-07-09 15:30:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test12341421'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:30:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 15:34:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:34:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=asd1234, email=null)[0;39m]
[[34m2024-07-09 15:34:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'asd1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:34:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[2024-07-09 15:34:54 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:34:54 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 16140 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:34:54 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 15:34:55 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:34:55 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@718989fa]
[2024-07-09 15:34:55 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:34:55 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.224 seconds (process running for 2.153)]
[2024-07-09 15:34:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:34:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-09 15:35:18 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:35:18 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 13972 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:35:18 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 15:35:19 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:35:19 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@77896335]
[2024-07-09 15:35:19 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:35:19 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.184 seconds (process running for 2.102)]
[2024-07-09 15:35:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:35:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-09 15:35:43 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:35:43 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 6636 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:35:43 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 15:35:43 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:35:44 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@718989fa]
[2024-07-09 15:35:44 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:35:44 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.176 seconds (process running for 2.081)]
[2024-07-09 15:35:44 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:35:44 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-09 15:35:55 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:35:55 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 14732 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:35:55 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 15:35:56 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:35:56 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@35fa450f]
[2024-07-09 15:35:56 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:35:56 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.175 seconds (process running for 2.08)]
[2024-07-09 15:35:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:35:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[[34m2024-07-09 15:36:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:36:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=test1234, email=null)[0;39m]
[[34m2024-07-09 15:36:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:36:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|-------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
|tea_id |uid      |upw                                                          |nm  |phone         |email              |gender |auth         |birth      |addr               |acept |created_at          |updated_at |
|-------|---------|-------------------------------------------------------------|----|--------------|-------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
|30     |test1234 |$2a$10$MuaNIaSdORXIyADnYzEulObRV1SYtEwVo8dfX6sesbXUtyiOZl3bK |홍길동 |010-0000-0000 |test1234@naver.com |남      |ROLE_TEAHCER |2024-06-28 |12345 # 서울 판교 1234 |2     |2024-07-09 15:06:59 |null       |
|-------|---------|-------------------------------------------------------------|----|--------------|-------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
[0;39m]
[[34m2024-07-09 15:37:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:37:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=asd1234, email=null)[0;39m]
[[34m2024-07-09 15:37:03[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'asd1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:37:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[2024-07-09 15:37:35 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 15:37:35 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 13652 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 15:37:35 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 15:37:36 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 15:37:36 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@35fa450f]
[2024-07-09 15:37:36 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 15:37:36 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.179 seconds (process running for 2.094)]
[2024-07-09 15:37:37 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO score_sign
        SET stu_id = 1
            , year = 2024
            , semester = 1
            , pic = 'org.springframework.mock.web.MockMultipartFile@fb5d334'
 {executed in 0 msec}]
[2024-07-09 15:37:37 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO score_sign
        SET stu_id = 1
            , year = 2024
            , semester = 1
            , pic = 'org.springframework.mock.web.MockMultipartFile@fb5d334'
 {executed in 0 msec}]
[2024-07-09 15:37:37 INFO Test worker] [jdbc.resultsettable] [
|----------|
|insert_id |
|----------|
|11        |
|----------|
]
[2024-07-09 15:37:37 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 15:37:37 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[[34m2024-07-09 15:40:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:40:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=asd1234, email=null)[0;39m]
[[34m2024-07-09 15:40:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'asd1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:40:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 15:41:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:41:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:41:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:41:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 150 ms[0;39m]
[[34m2024-07-09 15:42:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:43:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:43:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:43:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:43:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=asd1234, email=null)[0;39m]
[[34m2024-07-09 15:43:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'asd1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:43:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 15:43:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:43:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=asd1234, email=null)[0;39m]
[[34m2024-07-09 15:43:46[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'asd1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:43:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 15:44:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:45:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:45:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:46:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:46:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:47:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:47:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=asd1234, email=null)[0;39m]
[[34m2024-07-09 15:47:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'asd1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:47:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 15:47:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:47:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=asd1234, email=null)[0;39m]
[[34m2024-07-09 15:47:41[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'asd1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:47:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 15:48:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:48:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:49:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:50:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:50:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:51:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:52:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:52:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 140 ms[0;39m]
[[34m2024-07-09 15:53:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:53:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 15:53:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:53:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr    |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 15:53:16 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 15:53:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:53:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 15:54:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:54:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:54:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:54:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:54:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:54:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:54:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:54:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:54:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 176 ms[0;39m]
[[34m2024-07-09 15:54:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:54:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 15:54:32[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:54:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr    |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 15:53:16 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 15:54:32[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:54:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 15:54:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgwNzIsImV4cCI6MTcyMDUwODY3Miwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.l8kbxvxzzb8b7_99pAci-eQfh8HELmLOaYEN0d-G_8KZ6Y4dENZVR83XOR8cg8CUbjWGn4baOLJZhQPMOEOTdA[0;39m]
[[34m2024-07-09 15:54:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:54:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgwNzIsImV4cCI6MTcyMDUwODY3Miwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.l8kbxvxzzb8b7_99pAci-eQfh8HELmLOaYEN0d-G_8KZ6Y4dENZVR83XOR8cg8CUbjWGn4baOLJZhQPMOEOTdA[0;39m]
[[34m2024-07-09 15:55:10[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic, name, grade, phone, stu_id AS pk
        FROM student
        WHERE state = 1 AND parents_id IS NULL
        ORDER BY name, grade
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|----|-----|------|------|-------|
|pic |name |grade |phone |stu_id |
|----|-----|------|------|-------|
|----|-----|------|------|-------|
[0;39m]
[[34m2024-07-09 15:55:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgwNzIsImV4cCI6MTcyMDUwODY3Miwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.l8kbxvxzzb8b7_99pAci-eQfh8HELmLOaYEN0d-G_8KZ6Y4dENZVR83XOR8cg8CUbjWGn4baOLJZhQPMOEOTdA[0;39m]
[[34m2024-07-09 15:55:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:55:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 15:55:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:55:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:57:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:58:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 15:58:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 15:58:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:58:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr    |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 15:53:16 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 15:58:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:58:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 15:58:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 15:58:54[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:58:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr    |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 15:53:16 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 15:58:54[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:58:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 15:58:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 15:58:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:58:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr    |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 15:53:16 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 15:58:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:58:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 15:59:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 15:59:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:59:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 15:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 15:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 15:59:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr    |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 15:53:16 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 15:59:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 15:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:00:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:00:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 16:00:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:00:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr    |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 15:53:16 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 16:00:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:00:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:01:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDg0NTgsImV4cCI6MTcyMDUwOTA1OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.7SenS6F029rObUYzMYV94g0hbQNvhugrDTYzlCVD5QQHWvJpMJzvdBkZuFbgGkuMejkM5_UyApu2LIOhjQOiBA[0;39m]
[[34m2024-07-09 16:01:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:01:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr    |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 15:53:16 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 16:01:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:01:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:01:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDg0NTgsImV4cCI6MTcyMDUwOTA1OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.7SenS6F029rObUYzMYV94g0hbQNvhugrDTYzlCVD5QQHWvJpMJzvdBkZuFbgGkuMejkM5_UyApu2LIOhjQOiBA[0;39m]
[[34m2024-07-09 16:01:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:01:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr    |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 15:53:16 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|--------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 16:01:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:01:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:01:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDg0NTgsImV4cCI6MTcyMDUwOTA1OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.7SenS6F029rObUYzMYV94g0hbQNvhugrDTYzlCVD5QQHWvJpMJzvdBkZuFbgGkuMejkM5_UyApu2LIOhjQOiBA[0;39m]
[[34m2024-07-09 16:01:53[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:01:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 16:01:53[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:01:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:02:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDg0NTgsImV4cCI6MTcyMDUwOTA1OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.7SenS6F029rObUYzMYV94g0hbQNvhugrDTYzlCVD5QQHWvJpMJzvdBkZuFbgGkuMejkM5_UyApu2LIOhjQOiBA[0;39m]
[[34m2024-07-09 16:02:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 16:02:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:02:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr    |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 16:02:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDg0NTgsImV4cCI6MTcyMDUwOTA1OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.7SenS6F029rObUYzMYV94g0hbQNvhugrDTYzlCVD5QQHWvJpMJzvdBkZuFbgGkuMejkM5_UyApu2LIOhjQOiBA[0;39m]
[[34m2024-07-09 16:02:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 19[0;39m]
[[34m2024-07-09 16:02:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 19
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 16:02:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|---------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr    |etc |created_at          |class_id |uid      |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|---------|----|-------|--------------|----|----|
|19     |유학생  |여      |2009-01-01 |010-9999-0000 |김해시 내외동 |null|2024-07-04 08:17:36 |303      |parent19 |유부모 |조부     |010-1234-3456 |null|류선생 |
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|---------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 16:03:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDg0NTgsImV4cCI6MTcyMDUwOTA1OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.7SenS6F029rObUYzMYV94g0hbQNvhugrDTYzlCVD5QQHWvJpMJzvdBkZuFbgGkuMejkM5_UyApu2LIOhjQOiBA[0;39m]
[[34m2024-07-09 16:03:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 16:03:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:03:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr    |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 16:11:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:11:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:11:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:11:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:11:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 140 ms[0;39m]
[[34m2024-07-09 16:12:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:12:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 16:12:44[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 16:12:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 16:12:45[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:12:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:14:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDkxNjUsImV4cCI6MTcyMDUwOTc2NSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.vPY6HjhwOv7ZuNs2dNPnPY1zy37o1SmNQj6vLeYCYg1JgMSyBdJK2C6qklDTn3zohzqEdEsihSCs40G_-fX4Hw[0;39m]
[[34m2024-07-09 16:17:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:17:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 16:17:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:17:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 16:17:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:17:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:17:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:18:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:18:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:19:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:19:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDk0MzEsImV4cCI6MTcyMDUxMDAzMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.QVMeBmXUryGJVvEVD2YqHbUmQfXoK1qScymbajG0E4v-S3XWdZuTWEo8siYF2gqCuMf6cPloiXejaXdy1AYtvw[0;39m]
[[34m2024-07-09 16:19:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:19:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:19:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: [object Object][0;39m]
[[34m2024-07-09 16:19:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: [object Object][0;39m]
[[34m2024-07-09 16:20:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:22:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:23:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDk0MzEsImV4cCI6MTcyMDUxMDAzMSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.QVMeBmXUryGJVvEVD2YqHbUmQfXoK1qScymbajG0E4v-S3XWdZuTWEo8siYF2gqCuMf6cPloiXejaXdy1AYtvw[0;39m]
[[34m2024-07-09 16:23:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:23:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 171 ms[0;39m]
[[34m2024-07-09 16:28:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:28:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 16:28:53[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 16:28:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 16:28:53[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:28:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:29:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:29:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:29:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:30:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 16:30:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 16:30:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:30:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 16:30:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:30:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:30:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:30:39[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:30:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:30:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:30:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:30:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:30:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:30:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:30:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:30:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:30:54[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:30:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:31:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:31:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:31:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:31:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:31:52[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:31:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:32:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:32:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:32:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:32:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:32:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:32:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:32:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:32:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:32:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:32:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:32:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:32:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:34:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:34:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 16:34:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:34:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:34:52[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:34:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:35:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:35:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:35:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:35:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:35:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:35:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:35:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:35:51[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:35:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:36:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:36:00[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 16:36:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:36:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:36:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 16:36:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:36:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:36:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:36:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:36:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:36:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:36:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:37:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:37:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:37:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:37:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:37:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:37:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:37:37[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:37:37[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:37:37[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:38:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:38:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
30. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:38:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:38:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:38:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:38:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:38:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:39:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:39:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:39:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:39:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:39:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:40:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:40:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 253 ms[0;39m]
[[34m2024-07-09 16:40:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:40:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 16:40:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:40:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 16:40:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:40:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:40:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:40:42[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:40:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:40:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:40:56[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:40:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:41:33[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)[0;39m]
[[34m2024-07-09 16:41:33[0;39m [32mINFO [0;39mThread-5] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 16:41:33[0;39m [32mINFO [0;39mThread-5] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 16:41:33[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 16:41:33[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 16:41:33[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10052 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 16:41:33[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 559 ms[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Starting...[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@32a5aedd[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Start completed.[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
41. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:41:34[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 16:41:34[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 16:41:34[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 16:41:35[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 16:41:35[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 16:41:35[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 16:41:35[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.532 seconds (process running for 5562.077)[0;39m]
[[34m2024-07-09 16:41:35[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 16:42:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 16:42:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 16:42:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 15 ms[0;39m]
[[34m2024-07-09 16:42:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:42:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:42:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:42:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:42:05[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:42:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:42:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:42:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:42:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:42:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:42:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:42:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:42:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:42:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:42:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[2024-07-09 16:42:45 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-09 16:42:45 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 4024 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-09 16:42:45 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-09 16:42:46 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-09 16:42:46 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@38cfecf3]
[2024-07-09 16:42:46 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-09 16:42:46 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.299 seconds (process running for 2.236)]
[2024-07-09 16:42:47 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO score_sign
        SET stu_id = 1
            , year = 2024
            , semester = 1
            , pic = 'org.springframework.mock.web.MockMultipartFile@5a583720'
 {executed in 0 msec}]
[2024-07-09 16:42:47 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO score_sign
        SET stu_id = 1
            , year = 2024
            , semester = 1
            , pic = 'org.springframework.mock.web.MockMultipartFile@5a583720'
 {executed in 0 msec}]
[2024-07-09 16:42:47 INFO Test worker] [jdbc.resultsettable] [
|----------|
|insert_id |
|----------|
|12        |
|----------|
]
[2024-07-09 16:42:47 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-09 16:42:47 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[[34m2024-07-09 16:42:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:42:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:42:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:42:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:42:51[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:42:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:42:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:42:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:42:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:43:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:43:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:43:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:43:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:43:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:43:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:43:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:43:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:43:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:43:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:43:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 16 msec}[0;39m]
[[34m2024-07-09 16:43:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:43:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:43:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:43:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:44:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:44:03[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:44:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:44:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:44:05[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:44:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:44:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:44:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:44:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:44:37[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:44:37[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:44:37[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:44:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:44:52[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:44:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:45:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:45:00[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:45:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:45:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:45:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:45:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:45:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:45:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:45:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:45:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:45:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:45:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:45:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:45:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:45:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:45:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:45:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:45:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:45:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:45:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:45:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:45:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:45:51[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:45:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:46:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:46:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:46:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 16:46:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:46:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:47:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:47:06[0;39m [31mERROR[0;39mhttp-nio-8080-exec-10] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.multipart.MultipartException: Failed to parse multipart servlet request] with root cause[0;39m]
org.apache.tomcat.util.http.fileupload.impl.InvalidContentTypeException: the request doesn't contain a multipart/form-data or multipart/mixed stream, content type header is application/json
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.init(FileItemIteratorImpl.java:151)
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.getMultiPartStream(FileItemIteratorImpl.java:205)
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.findNextItem(FileItemIteratorImpl.java:224)
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.<init>(FileItemIteratorImpl.java:142)
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.getItemIterator(FileUploadBase.java:252)
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:276)
	at org.apache.catalina.connector.Request.parseParts(Request.java:2587)
	at org.apache.catalina.connector.Request.getParts(Request.java:2487)
	at org.apache.catalina.connector.RequestFacade.getParts(RequestFacade.java:773)
	at jakarta.servlet.http.HttpServletRequestWrapper.getParts(HttpServletRequestWrapper.java:315)
	at jakarta.servlet.http.HttpServletRequestWrapper.getParts(HttpServletRequestWrapper.java:315)
	at jakarta.servlet.http.HttpServletRequestWrapper.getParts(HttpServletRequestWrapper.java:315)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:93)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:86)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:70)
	at org.springframework.web.multipart.support.MultipartResolutionDelegate.asMultipartHttpServletRequest(MultipartResolutionDelegate.java:82)
	at org.springframework.web.multipart.support.RequestPartServletServerHttpRequest.<init>(RequestPartServletServerHttpRequest.java:68)
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:140)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 16:47:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:47:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 16:47:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 16:47:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr    |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 16:50:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 16:50:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 16:50:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 16:50:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 16:50:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 16:50:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 16:50:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:51:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:51:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:52:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:52:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:52:44[0;39m [33mWARN [0;39mhttp-nio-8080-exec-9] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported][0;39m]
[[34m2024-07-09 16:53:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:53:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:53:57[0;39m [33mWARN [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity com.green.fefu.teacher.service.TeacherControllerImpl.LogInTeacher(com.green.fefu.teacher.model.req.LogInTeacherReq,jakarta.servlet.http.HttpServletResponse)][0;39m]
[[34m2024-07-09 16:54:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:54:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 16:54:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:54:08[0;39m [33mWARN [0;39mhttp-nio-8080-exec-4] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity com.green.fefu.teacher.service.TeacherControllerImpl.LogInTeacher(com.green.fefu.teacher.model.req.LogInTeacherReq,jakarta.servlet.http.HttpServletResponse)][0;39m]
[[34m2024-07-09 16:54:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:54:15[0;39m [33mWARN [0;39mhttp-nio-8080-exec-5] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity com.green.fefu.teacher.service.TeacherControllerImpl.LogInTeacher(com.green.fefu.teacher.model.req.LogInTeacherReq,jakarta.servlet.http.HttpServletResponse)][0;39m]
[[34m2024-07-09 16:55:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTAxMzMsImV4cCI6MTcyMDUxMDczMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.AgciK9A027_8uUcuJpbrbk5GrfW3dApcW6vUTzWGRp_HlJMa9L2VRhullFlyKLEUBOJnDTORui4WKHEciy-9PA[0;39m]
[[34m2024-07-09 16:57:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 16:57:35[0;39m [33mWARN [0;39mhttp-nio-8080-exec-8] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity com.green.fefu.teacher.service.TeacherControllerImpl.LogInTeacher(com.green.fefu.teacher.model.req.LogInTeacherReq,jakarta.servlet.http.HttpServletResponse)][0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:04:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 244 ms[0;39m]
[[34m2024-07-09 17:06:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:06:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test123, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:06:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test123'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:06:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 17:06:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:06:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:06:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:06:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:06:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:06:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=test1234, password=Test1234!@#$, name=홍길동, phone=010-0000-0000, email=test1234@naver.com, gender=남, birth=2024-06-28, zoneCode=12345, addr=서울 판교 1234, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$B9WAdX6JhdDxGKoy3U7Ns.FLuIWcE3cqsn763l2cTU/ldTMDUJMT.[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 홍길동[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234@naver.com[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-0000-0000[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 남[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 12345 # 서울 판교 1234[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:06:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=test12345, password=Test12345!@#$, name=홍길동, phone=010-0000-0000, email=test1234@naver.com, gender=남, birth=2024-06-28, zoneCode=12345, addr=서울 판교 1234, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test12345[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$dC6jwHtSw2u6AqhlyP//KeePaNAunG6hjCn.rYqzI.zv8jMtVxgAW[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 홍길동[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234@naver.com[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-0000-0000[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 남[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 12345 # 서울 판교 1234[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test12345'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:06:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 17:06:29[0;39m [33mWARN [0;39mhttp-nio-8080-exec-8] [[33morg.mariadb.jdbc.message.server.ErrorPacket[0;39m] [[35mError: 1062-23000: Duplicate entry 'test1234@naver.com' for key 'email'[0;39m]
[[34m2024-07-09 17:06:29[0;39m [31mERROR[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. INSERT INTO TEACHER
         SET uid = 'test12345',
            upw = '$2a$10$dC6jwHtSw2u6AqhlyP//KeePaNAunG6hjCn.rYqzI.zv8jMtVxgAW',
            nm = '홍길동',
            phone = '010-0000-0000',
            email = 'test1234@naver.com',
            gender = '남',

                birth = '2024-06-28',

                addr = '12345 # 서울 판교 1234'
 {FAILED after 0 msec}[0;39m]
java.sql.SQLIntegrityConstraintViolationException: (conn=1981) Duplicate entry 'test1234@naver.com' for key 'email'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy155.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy5/jdk.proxy5.$Proxy211.CreateTeacher(Unknown Source)
	at com.green.fefu.teacher.service.TeacherServiceImpl.CreateTeacher(TeacherServiceImpl.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.teacher.service.TeacherServiceImpl$$SpringCGLIB$$0.CreateTeacher(<generated>)
	at com.green.fefu.teacher.service.TeacherControllerImpl.CreateTeacher(TeacherControllerImpl.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 17:06:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:06:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=test123, password=Test12345!@#$, name=홍길동, phone=010-0000-0000, email=test1234@naver.com, gender=남, birth=2024-06-28, zoneCode=12345, addr=서울 판교 1234, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-09 17:06:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test123[0;39m]
[[34m2024-07-09 17:06:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$k4jCjCQmgKl.H/lRF6/auuGPjt8nvQEepP0CATG5pClSP.5veWdfu[0;39m]
[[34m2024-07-09 17:06:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 홍길동[0;39m]
[[34m2024-07-09 17:06:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234@naver.com[0;39m]
[[34m2024-07-09 17:06:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-0000-0000[0;39m]
[[34m2024-07-09 17:06:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 남[0;39m]
[[34m2024-07-09 17:06:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 12345 # 서울 판교 1234[0;39m]
[[34m2024-07-09 17:06:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test123'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:06:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 17:06:38[0;39m [33mWARN [0;39mhttp-nio-8080-exec-7] [[33morg.mariadb.jdbc.message.server.ErrorPacket[0;39m] [[35mError: 1062-23000: Duplicate entry 'test1234@naver.com' for key 'email'[0;39m]
[[34m2024-07-09 17:06:38[0;39m [31mERROR[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. INSERT INTO TEACHER
         SET uid = 'test123',
            upw = '$2a$10$k4jCjCQmgKl.H/lRF6/auuGPjt8nvQEepP0CATG5pClSP.5veWdfu',
            nm = '홍길동',
            phone = '010-0000-0000',
            email = 'test1234@naver.com',
            gender = '남',

                birth = '2024-06-28',

                addr = '12345 # 서울 판교 1234'
 {FAILED after 0 msec}[0;39m]
java.sql.SQLIntegrityConstraintViolationException: (conn=1981) Duplicate entry 'test1234@naver.com' for key 'email'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy155.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy5/jdk.proxy5.$Proxy211.CreateTeacher(Unknown Source)
	at com.green.fefu.teacher.service.TeacherServiceImpl.CreateTeacher(TeacherServiceImpl.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.teacher.service.TeacherServiceImpl$$SpringCGLIB$$0.CreateTeacher(<generated>)
	at com.green.fefu.teacher.service.TeacherControllerImpl.CreateTeacher(TeacherControllerImpl.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 17:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=test123, password=Test12345!@#$, name=홍길동, phone=010-0000-0000, email=test1234@naver.com, gender=남, birth=2024-06-28, zoneCode=12345, addr=서울 판교 1234, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-09 17:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test123[0;39m]
[[34m2024-07-09 17:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$FWu6ykE8ri9EAGbNRR3...EAFddDorLYPjmdZX6JC9njPfxbJM3ki[0;39m]
[[34m2024-07-09 17:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 홍길동[0;39m]
[[34m2024-07-09 17:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234@naver.com[0;39m]
[[34m2024-07-09 17:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-0000-0000[0;39m]
[[34m2024-07-09 17:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 남[0;39m]
[[34m2024-07-09 17:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 12345 # 서울 판교 1234[0;39m]
[[34m2024-07-09 17:06:40[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test123'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 17:06:40[0;39m [33mWARN [0;39mhttp-nio-8080-exec-4] [[33morg.mariadb.jdbc.message.server.ErrorPacket[0;39m] [[35mError: 1062-23000: Duplicate entry 'test1234@naver.com' for key 'email'[0;39m]
[[34m2024-07-09 17:06:40[0;39m [31mERROR[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. INSERT INTO TEACHER
         SET uid = 'test123',
            upw = '$2a$10$FWu6ykE8ri9EAGbNRR3...EAFddDorLYPjmdZX6JC9njPfxbJM3ki',
            nm = '홍길동',
            phone = '010-0000-0000',
            email = 'test1234@naver.com',
            gender = '남',

                birth = '2024-06-28',

                addr = '12345 # 서울 판교 1234'
 {FAILED after 0 msec}[0;39m]
java.sql.SQLIntegrityConstraintViolationException: (conn=1981) Duplicate entry 'test1234@naver.com' for key 'email'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy155.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy5/jdk.proxy5.$Proxy211.CreateTeacher(Unknown Source)
	at com.green.fefu.teacher.service.TeacherServiceImpl.CreateTeacher(TeacherServiceImpl.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.teacher.service.TeacherServiceImpl$$SpringCGLIB$$0.CreateTeacher(<generated>)
	at com.green.fefu.teacher.service.TeacherControllerImpl.CreateTeacher(TeacherControllerImpl.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 17:06:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:06:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test123455, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:06:52[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test123455'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:06:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 17:06:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:06:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:06:56[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:06:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:06:56[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:06:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:21:21[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 3 class path changes (0 additions, 3 deletions, 0 modifications)[0;39m]
[[34m2024-07-09 17:21:21[0;39m [32mINFO [0;39mThread-7] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 17:21:21[0;39m [32mINFO [0;39mThread-7] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 17:21:21[0;39m [32mINFO [0;39mThread-7] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown initiated...[0;39m]
[[34m2024-07-09 17:21:21[0;39m [32mINFO [0;39mThread-7] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown completed.[0;39m]
[[34m2024-07-09 17:21:21[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10052 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 17:21:21[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 614 ms[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-3 - Starting...[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@51de6cdc[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-3 - Start completed.[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
61. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:21:22[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 17:21:22[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 17:21:22[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 17:21:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 17:21:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 17:21:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 17:21:23[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.664 seconds (process running for 7950.068)[0;39m]
[[34m2024-07-09 17:21:23[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 17:21:24[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 3 class path changes (3 additions, 0 deletions, 0 modifications)[0;39m]
[[34m2024-07-09 17:21:24[0;39m [32mINFO [0;39mThread-11] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mThread-11] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mThread-11] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-3 - Shutdown initiated...[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mThread-11] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-3 - Shutdown completed.[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10052 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 627 ms[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-4 - Starting...[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-4 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7498804d[0;39m]
[[34m2024-07-09 17:21:25[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-4 - Start completed.[0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
71. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:21:26[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 17:21:26[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.483 seconds (process running for 7953.481)[0;39m]
[[34m2024-07-09 17:21:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 17:22:16[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m]
[[34m2024-07-09 17:22:16[0;39m [32mINFO [0;39mThread-15] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 17:22:16[0;39m [32mINFO [0;39mThread-15] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 17:22:16[0;39m [32mINFO [0;39mThread-15] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-4 - Shutdown initiated...[0;39m]
[[34m2024-07-09 17:22:16[0;39m [32mINFO [0;39mThread-15] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-4 - Shutdown completed.[0;39m]
[[34m2024-07-09 17:22:16[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10052 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 17:22:16[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 590 ms[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-5 - Starting...[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-5 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7e905579[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-5 - Start completed.[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
81. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:22:17[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 17:22:17[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 17:22:17[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 17:22:18[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 17:22:18[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 17:22:18[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 17:22:18[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 17:22:18[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.876 seconds (process running for 8005.3)[0;39m]
[[34m2024-07-09 17:22:18[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 17:23:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 17:23:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 17:23:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 0 ms[0;39m]
[[34m2024-07-09 17:23:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:23:50[0;39m [33mWARN [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/x-www-form-urlencoded;charset=UTF-8' is not supported][0;39m]
[[34m2024-07-09 17:24:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:24:58[0;39m [33mWARN [0;39mhttp-nio-8080-exec-2] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/x-www-form-urlencoded;charset=UTF-8' is not supported][0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=test123, password=Test12345!@#$, name=홍길동, phone=010-0000-0000, email=test1234@naver.com, gender=남, birth=2024-06-28, zoneCode=12345, addr=서울 판교 1234, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test123[0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$a8lkkIb4LXZrUS4sIj8Qwe4HmWaoaq5GjnF8Otgaz9i1mW4nGDjuu[0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 홍길동[0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : test1234@naver.com[0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-0000-0000[0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 남[0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 12345 # 서울 판교 1234[0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test123'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:28:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 17:28:22[0;39m [33mWARN [0;39mhttp-nio-8080-exec-3] [[33morg.mariadb.jdbc.message.server.ErrorPacket[0;39m] [[35mError: 1062-23000: Duplicate entry 'test1234@naver.com' for key 'email'[0;39m]
[[34m2024-07-09 17:28:22[0;39m [31mERROR[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. INSERT INTO TEACHER
         SET uid = 'test123',
            upw = '$2a$10$a8lkkIb4LXZrUS4sIj8Qwe4HmWaoaq5GjnF8Otgaz9i1mW4nGDjuu',
            nm = '홍길동',
            phone = '010-0000-0000',
            email = 'test1234@naver.com',
            gender = '남',

                birth = '2024-06-28',

                addr = '12345 # 서울 판교 1234'
 {FAILED after 0 msec}[0;39m]
java.sql.SQLIntegrityConstraintViolationException: (conn=2185) Duplicate entry 'test1234@naver.com' for key 'email'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy155.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy8/jdk.proxy8.$Proxy244.CreateTeacher(Unknown Source)
	at com.green.fefu.teacher.service.TeacherServiceImpl.CreateTeacher(TeacherServiceImpl.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.teacher.service.TeacherServiceImpl$$SpringCGLIB$$0.CreateTeacher(<generated>)
	at com.green.fefu.teacher.service.TeacherControllerImpl.CreateTeacher(TeacherControllerImpl.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 17:28:37[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:28:37[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=test1234, email=null)[0;39m]
[[34m2024-07-09 17:28:37[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:28:37[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:28:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:28:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=test12341, email=null)[0;39m]
[[34m2024-07-09 17:28:40[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test12341'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:28:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----------|-------------------------------------------------------------|----|--------------|---------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
|tea_id |uid       |upw                                                          |nm  |phone         |email                |gender |auth         |birth      |addr               |acept |created_at          |updated_at |
|-------|----------|-------------------------------------------------------------|----|--------------|---------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
|32     |test12341 |$2a$10$psxXYPp6bYUMDXdfz2HNIe15fGIkcG7MOtnvhJypbxNMoU2anNOzW |홍길동 |010-0000-0000 |test121231@naver.com |남      |ROLE_TEAHCER |2024-06-28 |12345 # 서울 판교 1234 |2     |2024-07-09 15:15:25 |null       |
|-------|----------|-------------------------------------------------------------|----|--------------|---------------------|-------|-------------|-----------|-------------------|------|--------------------|-----------|
[0;39m]
[[34m2024-07-09 17:28:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:28:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=test123412, email=null)[0;39m]
[[34m2024-07-09 17:28:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test123412'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:28:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-09 17:29:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MDgzMDMsImV4cCI6MTcyMDUwODkwMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.j0RwIr5S4M2W1fSA6Y7QqDpT-RtDY8nyabGWHRDDjcXgYG-As7I23H7_UFz-zF9XtQxne2FWJBJKx3-FLvvrPQ[0;39m]
[[34m2024-07-09 17:29:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:29:05[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:29:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:29:05[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:29:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:29:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:29:45[0;39m [33mWARN [0;39mhttp-nio-8080-exec-8] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/x-www-form-urlencoded;charset=UTF-8' is not supported][0;39m]
[[34m2024-07-09 17:30:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:30:29[0;39m [33mWARN [0;39mhttp-nio-8080-exec-10] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/x-www-form-urlencoded;charset=UTF-8' is not supported][0;39m]
[[34m2024-07-09 17:30:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:30:59[0;39m [33mWARN [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/x-www-form-urlencoded;charset=UTF-8' is not supported][0;39m]
[[34m2024-07-09 17:33:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:33:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:33:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:33:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:33:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:33:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:34:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:34:05[0;39m [33mWARN [0;39mhttp-nio-8080-exec-3] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/x-www-form-urlencoded;charset=UTF-8' is not supported][0;39m]
[[34m2024-07-09 17:35:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:35:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:35:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:35:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:35:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:35:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:36:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:36:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:36:53[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:36:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:36:53[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:36:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:37:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:37:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:37:54[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:37:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:37:54[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:37:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:38:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:38:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:38:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:38:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:38:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:38:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:42:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:42:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:42:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:42:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:42:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:42:05[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:42:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:42:05[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:42:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:42:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:42:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:42:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:42:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:42:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:42:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:42:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 17:42:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 17:42:34[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:42:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth         |birth      |addr           |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_TEAHCER |1980-03-10 |1234 # 서울시 서초구 |2     |2024-07-04 08:02:22 |2024-07-09 16:01:52 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-------------|-----------|---------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 17:42:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 17:42:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 17:56:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:00:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:00:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:00:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:00:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:00:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:00:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:00:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:00:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:00:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 171 ms[0;39m]
[[34m2024-07-09 18:01:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 18:01:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 18:02:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:02:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:02:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:02:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:02:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:02:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:02:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:02:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:02:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:02:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 156 ms[0;39m]
[[34m2024-07-09 18:02:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:02:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:02:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:02:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:02:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:02:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:03:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTU3NzgsImV4cCI6MTcyMDUxNjM3OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.01XR-GS-vnvfFnGF8342ogE78HSEFsaHWbhO7biq-igI787Lh2GGwIvQLmYW0_78ajXopsuKHK-xvyCBsz-WFw[0;39m]
[[34m2024-07-09 18:03:15[0;39m [31mERROR[0;39mhttp-nio-8080-exec-6] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException] with root cause[0;39m]
java.lang.RuntimeException: null
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:167)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:03:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTU3NzgsImV4cCI6MTcyMDUxNjM3OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.01XR-GS-vnvfFnGF8342ogE78HSEFsaHWbhO7biq-igI787Lh2GGwIvQLmYW0_78ajXopsuKHK-xvyCBsz-WFw[0;39m]
[[34m2024-07-09 18:03:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTU3NzgsImV4cCI6MTcyMDUxNjM3OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.01XR-GS-vnvfFnGF8342ogE78HSEFsaHWbhO7biq-igI787Lh2GGwIvQLmYW0_78ajXopsuKHK-xvyCBsz-WFw[0;39m]
[[34m2024-07-09 18:03:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:03:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:03:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:03:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:03:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:03:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:03:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:03:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:03:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:03:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:03:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:04:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:04:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:04:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:04:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:04:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:04:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:04:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTU3NzgsImV4cCI6MTcyMDUxNjM3OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.01XR-GS-vnvfFnGF8342ogE78HSEFsaHWbhO7biq-igI787Lh2GGwIvQLmYW0_78ajXopsuKHK-xvyCBsz-WFw[0;39m]
[[34m2024-07-09 18:04:15[0;39m [31mERROR[0;39mhttp-nio-8080-exec-10] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException] with root cause[0;39m]
java.lang.RuntimeException: null
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:167)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:06:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 18:06:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:07:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTU3NzgsImV4cCI6MTcyMDUxNjM3OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.01XR-GS-vnvfFnGF8342ogE78HSEFsaHWbhO7biq-igI787Lh2GGwIvQLmYW0_78ajXopsuKHK-xvyCBsz-WFw[0;39m]
[[34m2024-07-09 18:07:12[0;39m [31mERROR[0;39mhttp-nio-8080-exec-7] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException] with root cause[0;39m]
java.lang.RuntimeException: null
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:167)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:08:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 18:08:32[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m]
[[34m2024-07-09 18:08:32[0;39m [32mINFO [0;39mThread-19] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:32[0;39m [32mINFO [0;39mThread-19] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:08:32[0;39m [32mINFO [0;39mThread-19] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-5 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:08:32[0;39m [32mINFO [0;39mThread-19] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-5 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:08:32[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10052 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:08:32[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:08:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:08:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 465 ms[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-6 - Starting...[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-6 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7c0bcee3[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-6 - Start completed.[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
101. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:08:33[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:08:33[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.288 seconds (process running for 10780.735)[0;39m]
[[34m2024-07-09 18:08:33[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 18:08:40[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 3 class path changes (0 additions, 3 deletions, 0 modifications)[0;39m]
[[34m2024-07-09 18:08:40[0;39m [32mINFO [0;39mThread-23] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:40[0;39m [32mINFO [0;39mThread-23] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:08:40[0;39m [32mINFO [0;39mThread-23] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-6 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:08:40[0;39m [32mINFO [0;39mThread-23] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-6 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:08:40[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10052 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:08:40[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:08:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:08:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 495 ms[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-7 - Starting...[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-7 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5e7def8d[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-7 - Start completed.[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
111. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:08:41[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:08:41[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.278 seconds (process running for 10788.635)[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 0 ms[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:08:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:08:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:08:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:08:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 187 ms[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 3 class path changes (3 additions, 0 deletions, 0 modifications)[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mThread-27] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mThread-27] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mThread-27] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-7 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mThread-27] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-7 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10052 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 507 ms[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-8 - Starting...[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-8 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@10c24d02[0;39m]
[[34m2024-07-09 18:08:43[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-8 - Start completed.[0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
121. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:08:44[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:08:44[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.348 seconds (process running for 10791.489)[0;39m]
[[34m2024-07-09 18:08:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mThread-31] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mThread-31] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mThread-31] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-8 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mThread-31] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-8 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10052 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 22 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:08:52[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 543 ms[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-9 - Starting...[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-9 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@36577363[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-9 - Start completed.[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
131. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:08:53[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:08:53[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.391 seconds (process running for 10800.513)[0;39m]
[[34m2024-07-09 18:08:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 0 ms[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 187 ms[0;39m]
[[34m2024-07-09 18:09:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:09:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
131. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:09:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:09:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
131. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:09:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:09:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
131. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:09:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
131. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:09:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:09:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTYxNTQsImV4cCI6MTcyMDUxNjc1NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.hzYTCmP8XDWkatQc_VW2u2o1T3n4OJCml0V6B7ftpEPEHYZsKQFpLd360ErgVk9hwzq2DzW-dfq8sf2Bib979g[0;39m]
[[34m2024-07-09 18:09:25[0;39m [31mERROR[0;39mhttp-nio-8080-exec-2] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Refresh token cookie not found] with root cause[0;39m]
java.lang.RuntimeException: Refresh token cookie not found
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:167)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:10:09[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:10:09[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-9 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:10:09[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-9 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:10:12[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 18:10:12[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 16428 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:10:12[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:10:12[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 18:10:12[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 18:10:13[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:10:13[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 11 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1570 ms[0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2566c0b1[0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:10:14[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:10:14[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:10:15[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:10:15[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:10:15[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:10:15[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:10:16[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:10:16[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:10:16[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:10:16[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.206 seconds (process running for 4.697)[0;39m]
[[34m2024-07-09 18:10:16[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:10:16[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:10:16[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 363 ms[0;39m]
[[34m2024-07-09 18:10:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:10:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:10:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 18:10:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:10:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:10:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:10:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTYyMjMsImV4cCI6MTcyMDUxNjgyMywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.H72cw0qj2FiXzN2cT4OfCA3CHJZn4zs0PYamH_D5kR0qDp__03e5IGOjQ1fiJzNW9FHFQ9C3eH-Sx1gKbEZPpA[0;39m]
[[34m2024-07-09 18:10:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mreq: {}[0;39m]
[[34m2024-07-09 18:10:36[0;39m [31mERROR[0;39mhttp-nio-8080-exec-6] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Refresh token cookie not found] with root cause[0;39m]
java.lang.RuntimeException: Refresh token cookie not found
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:11:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:11:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:11:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 18:11:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:11:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:11:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:11:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:11:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:11:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:12:23[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:12:23[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:12:23[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:12:26[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 18:12:26[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 19932 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:12:26[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:12:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 18:12:26[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 18:12:27[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:12:27[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1616 ms[0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@18e5ddf3[0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:12:28[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:12:28[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:12:29[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:12:29[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:12:29[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:12:29[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:12:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:12:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:12:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:12:30[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.469 seconds (process running for 5.081)[0;39m]
[[34m2024-07-09 18:12:30[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:12:30[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:12:30[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 18:12:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:12:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:12:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:12:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:12:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:12:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:12:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:12:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:12:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:12:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 390 ms[0;39m]
[[34m2024-07-09 18:13:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:13:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentsId
                , uid
                , upw
                , nm
                , phone
                , sub_phone AS subPhone
                , email
                , connet
                , auth
                , addr
                , acept
                , created_at AS createdAt
                , updated_at AS updatedAt
        FROM parents
        WHERE uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:13:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
|parents_id |uid      |upw                                                          |nm  |phone         |sub_phone |email |connet |auth         |addr      |acept |created_at          |updated_at          |
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
|38         |test1234 |$2a$10$kKhDONHaWFc2F.hjbvkNfuXqN2kg7XN5ooC.wZfAYvNzfKB9lCwzW |홍길동 |010-0000-0000 |null      |null  |부      |ROLE_PARENTS |12345#대구시 |2     |2024-07-09 12:13:18 |2024-07-09 12:14:25 |
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:13:08[0;39m [31mERROR[0;39mhttp-nio-8080-exec-10] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: 비밀번호를 확인해 주세요] with root cause[0;39m]
java.lang.IllegalArgumentException: 비밀번호를 확인해 주세요
	at com.green.fefu.parents.ParentsUserServiceImpl.signInPost(ParentsUserServiceImpl.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.signInPost(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.signInPost(ParentsUserControllerImpl.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:13:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:13:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentsId
                , uid
                , upw
                , nm
                , phone
                , sub_phone AS subPhone
                , email
                , connet
                , auth
                , addr
                , acept
                , created_at AS createdAt
                , updated_at AS updatedAt
        FROM parents
        WHERE uid = 'test1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 18:13:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
|parents_id |uid      |upw                                                          |nm  |phone         |sub_phone |email |connet |auth         |addr      |acept |created_at          |updated_at          |
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
|38         |test1234 |$2a$10$kKhDONHaWFc2F.hjbvkNfuXqN2kg7XN5ooC.wZfAYvNzfKB9lCwzW |홍길동 |010-0000-0000 |null      |null  |부      |ROLE_PARENTS |12345#대구시 |2     |2024-07-09 12:13:18 |2024-07-09 12:14:25 |
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:13:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTY0MDUsImV4cCI6MTcyMDUxNzAwNSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjM4LFwicm9sZVwiOlwiUk9MRV9QQVJFTlRTXCJ9In0.U9fE7f9H2EoPpXd5iNxQwSHHqCczidWcQLuNKVR_An8AU3SnGiZ8MsEuWEsVn1fhr1RdN2wXLBE3Yqg5MHMEpA[0;39m]
[[34m2024-07-09 18:13:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mreq: {}[0;39m]
[[34m2024-07-09 18:13:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mNo cookies found[0;39m]
[[34m2024-07-09 18:13:40[0;39m [31mERROR[0;39mhttp-nio-8080-exec-2] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Refresh token cookie not found] with root cause[0;39m]
java.lang.RuntimeException: Refresh token cookie not found
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:14:41[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)[0;39m]
[[34m2024-07-09 18:14:41[0;39m [32mINFO [0;39mThread-5] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:14:41[0;39m [32mINFO [0;39mThread-5] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:14:41[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:14:41[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:14:41[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 19932 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:14:41[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:14:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:14:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 581 ms[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Starting...[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@714ec677[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Start completed.[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:14:42[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:14:42[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:14:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:14:43[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.477 seconds (process running for 137.603)[0;39m]
[[34m2024-07-09 18:14:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mThread-7] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mThread-7] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mThread-7] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mThread-7] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 19932 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 10 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:15:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 501 ms[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-3 - Starting...[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1757901b[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-3 - Start completed.[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
21. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:15:10[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:15:10[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.381 seconds (process running for 165.34)[0;39m]
[[34m2024-07-09 18:15:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 18:15:38[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:15:38[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-3 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:15:38[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-3 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:15:41[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 18:15:41[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10136 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:15:41[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:15:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 18:15:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 18:15:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:15:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 11 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:15:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:15:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:15:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:15:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:15:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:15:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1720 ms[0;39m]
[[34m2024-07-09 18:15:43[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 18:15:43[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1401a24f[0;39m]
[[34m2024-07-09 18:15:43[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 18:15:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:15:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 18:15:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:15:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:15:43[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:15:43[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:15:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:15:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:15:44[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:15:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:15:45[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:15:45[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:15:45[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:15:45[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.4 seconds (process running for 4.887)[0;39m]
[[34m2024-07-09 18:15:45[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:15:45[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:15:45[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 18:15:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTY0MDUsImV4cCI6MTcyMDUxNzAwNSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjM4LFwicm9sZVwiOlwiUk9MRV9QQVJFTlRTXCJ9In0.U9fE7f9H2EoPpXd5iNxQwSHHqCczidWcQLuNKVR_An8AU3SnGiZ8MsEuWEsVn1fhr1RdN2wXLBE3Yqg5MHMEpA[0;39m]
[[34m2024-07-09 18:15:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mreq: {}[0;39m]
[[34m2024-07-09 18:15:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mNo cookies found[0;39m]
[[34m2024-07-09 18:15:49[0;39m [31mERROR[0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Refresh token cookie not found] with root cause[0;39m]
java.lang.RuntimeException: Refresh token cookie not found
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:15:55[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:15:55[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:15:55[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:15:57[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 18:15:57[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10144 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:15:57[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:15:57[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 18:15:57[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 18:15:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:15:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 11 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1637 ms[0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@47942b81[0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 18:15:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:16:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:16:00[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:16:00[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:16:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:16:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:16:00[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.389 seconds (process running for 4.887)[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 0 ms[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:16:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:16:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:16:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:16:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:16:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 405 ms[0;39m]
[[34m2024-07-09 18:16:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:16:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentsId
                , uid
                , upw
                , nm
                , phone
                , sub_phone AS subPhone
                , email
                , connet
                , auth
                , addr
                , acept
                , created_at AS createdAt
                , updated_at AS updatedAt
        FROM parents
        WHERE uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:16:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
|parents_id |uid      |upw                                                          |nm  |phone         |sub_phone |email |connet |auth         |addr      |acept |created_at          |updated_at          |
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
|38         |test1234 |$2a$10$kKhDONHaWFc2F.hjbvkNfuXqN2kg7XN5ooC.wZfAYvNzfKB9lCwzW |홍길동 |010-0000-0000 |null      |null  |부      |ROLE_PARENTS |12345#대구시 |2     |2024-07-09 12:13:18 |2024-07-09 12:14:25 |
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:17:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTY2MTcsImV4cCI6MTcyMDUxNzIxNywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjM4LFwicm9sZVwiOlwiUk9MRV9QQVJFTlRTXCJ9In0.iEtdYVGRDS6K0j1JTMVEfl9oVvpOXR6hfVh7-iUPOImpusOiCwPXizpVR4Y8BH_jD4ty9My6M26nJx0WsU0X2g[0;39m]
[[34m2024-07-09 18:17:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mreq: {}[0;39m]
[[34m2024-07-09 18:17:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mNo cookies found[0;39m]
[[34m2024-07-09 18:17:31[0;39m [31mERROR[0;39mhttp-nio-8080-exec-7] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Refresh token cookie not found] with root cause[0;39m]
java.lang.RuntimeException: Refresh token cookie not found
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:18:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:18:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:18:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:18:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:18:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:18:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTY2MTcsImV4cCI6MTcyMDUxNzIxNywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjM4LFwicm9sZVwiOlwiUk9MRV9QQVJFTlRTXCJ9In0.iEtdYVGRDS6K0j1JTMVEfl9oVvpOXR6hfVh7-iUPOImpusOiCwPXizpVR4Y8BH_jD4ty9My6M26nJx0WsU0X2g[0;39m]
[[34m2024-07-09 18:18:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mreq: {}[0;39m]
[[34m2024-07-09 18:18:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mNo cookies found[0;39m]
[[34m2024-07-09 18:18:27[0;39m [31mERROR[0;39mhttp-nio-8080-exec-9] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Refresh token cookie not found] with root cause[0;39m]
java.lang.RuntimeException: Refresh token cookie not found
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:18:57[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)[0;39m]
[[34m2024-07-09 18:18:57[0;39m [32mINFO [0;39mThread-5] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mThread-5] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 10144 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 509 ms[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Starting...[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5d49aa0f[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Start completed.[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:18:58[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:18:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:18:59[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:18:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:18:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:18:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:18:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:18:59[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.472 seconds (process running for 182.728)[0;39m]
[[34m2024-07-09 18:18:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 18:19:34[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:19:34[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:19:34[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:19:37[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 18:19:37[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 13796 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:19:37[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:19:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 18:19:37[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 18:19:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:19:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 11 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:19:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:19:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:19:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:19:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:19:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:19:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1570 ms[0;39m]
[[34m2024-07-09 18:19:39[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 18:19:39[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e3241aa[0;39m]
[[34m2024-07-09 18:19:39[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 18:19:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:19:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 18:19:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:19:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:19:39[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:19:39[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:19:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:19:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:19:40[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:19:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:19:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:19:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:19:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:19:41[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.676 seconds (process running for 5.386)[0;39m]
[[34m2024-07-09 18:19:41[0;39m [32mINFO [0;39mRMI TCP Connection(4)-192.168.0.164] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:19:41[0;39m [32mINFO [0;39mRMI TCP Connection(4)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:19:41[0;39m [32mINFO [0;39mRMI TCP Connection(4)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 18:19:42[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:19:42[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:19:42[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:19:45[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-09 18:19:45[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 16204 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:19:45[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:19:45[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-09 18:19:45[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-09 18:19:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:19:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 10 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1546 ms[0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7acacea3[0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:19:47[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:19:47[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:19:48[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:19:48[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:19:48[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:19:48[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:19:49[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:19:49[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:19:49[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:19:49[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.162 seconds (process running for 4.632)[0;39m]
[[34m2024-07-09 18:19:49[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:19:49[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:19:49[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-09 18:19:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTY2MTcsImV4cCI6MTcyMDUxNzIxNywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjM4LFwicm9sZVwiOlwiUk9MRV9QQVJFTlRTXCJ9In0.iEtdYVGRDS6K0j1JTMVEfl9oVvpOXR6hfVh7-iUPOImpusOiCwPXizpVR4Y8BH_jD4ty9My6M26nJx0WsU0X2g[0;39m]
[[34m2024-07-09 18:19:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mreq: {}[0;39m]
[[34m2024-07-09 18:19:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mNo cookies found[0;39m]
[[34m2024-07-09 18:19:53[0;39m [31mERROR[0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Refresh token cookie not found] with root cause[0;39m]
java.lang.RuntimeException: Refresh token cookie not found
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:20:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTY2MTcsImV4cCI6MTcyMDUxNzIxNywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjM4LFwicm9sZVwiOlwiUk9MRV9QQVJFTlRTXCJ9In0.iEtdYVGRDS6K0j1JTMVEfl9oVvpOXR6hfVh7-iUPOImpusOiCwPXizpVR4Y8BH_jD4ty9My6M26nJx0WsU0X2g[0;39m]
[[34m2024-07-09 18:20:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mreq: {}[0;39m]
[[34m2024-07-09 18:20:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mNo cookies found[0;39m]
[[34m2024-07-09 18:20:07[0;39m [31mERROR[0;39mhttp-nio-8080-exec-4] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Refresh token cookie not found] with root cause[0;39m]
java.lang.RuntimeException: Refresh token cookie not found
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:20:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 385 ms[0;39m]
[[34m2024-07-09 18:20:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:20:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentsId
                , uid
                , upw
                , nm
                , phone
                , sub_phone AS subPhone
                , email
                , connet
                , auth
                , addr
                , acept
                , created_at AS createdAt
                , updated_at AS updatedAt
        FROM parents
        WHERE uid = 'test1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-09 18:20:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
|parents_id |uid      |upw                                                          |nm  |phone         |sub_phone |email |connet |auth         |addr      |acept |created_at          |updated_at          |
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
|38         |test1234 |$2a$10$kKhDONHaWFc2F.hjbvkNfuXqN2kg7XN5ooC.wZfAYvNzfKB9lCwzW |홍길동 |010-0000-0000 |null      |null  |부      |ROLE_PARENTS |12345#대구시 |2     |2024-07-09 12:13:18 |2024-07-09 12:14:25 |
|-----------|---------|-------------------------------------------------------------|----|--------------|----------|------|-------|-------------|----------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:20:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTY4MjksImV4cCI6MTcyMDUxNzQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjM4LFwicm9sZVwiOlwiUk9MRV9QQVJFTlRTXCJ9In0.23tLKOrT1Xg8pd4V3Px_frmKjQGVr5OYLwQnsmWteCAw_WGF29Y572Dn6VDGgFfr4tLR9iKsR4LZoT2to3Ec4g[0;39m]
[[34m2024-07-09 18:20:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mreq: {}[0;39m]
[[34m2024-07-09 18:20:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.parents.ParentsUserServiceImpl[0;39m] [[35mNo cookies found[0;39m]
[[34m2024-07-09 18:20:44[0;39m [31mERROR[0;39mhttp-nio-8080-exec-5] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Refresh token cookie not found] with root cause[0;39m]
java.lang.RuntimeException: Refresh token cookie not found
	at com.green.fefu.parents.ParentsUserServiceImpl.getAccessToken(ParentsUserServiceImpl.java:179)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.getAccessToken(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.getAccessToken(ParentsUserControllerImpl.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 18:21:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:21:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:21:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:21:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:21:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 13 class path changes (0 additions, 0 deletions, 13 modifications)[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mThread-5] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mThread-5] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 16204 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 8 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 525 ms[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Starting...[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6b25a0d5[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Start completed.[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:24:09[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-09 18:24:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 18:24:10[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-09 18:24:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-09 18:24:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-09 18:24:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-09 18:24:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-09 18:24:10[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.479 seconds (process running for 265.83)[0;39m]
[[34m2024-07-09 18:24:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-09 18:29:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:29:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-09 18:29:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 0 ms[0;39m]
[[34m2024-07-09 18:29:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:29:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:29:32[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:29:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:29:32[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:29:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:31:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 18:32:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:32:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:32:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:32:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:37:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:37:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:37:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:37:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:37:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:37:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:47:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:47:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:47:40[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:47:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:47:40[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:47:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:48:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:48:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:48:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:48:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:48:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:48:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:49:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:49:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:49:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:49:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:49:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:49:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:50:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:50:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:50:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:50:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:50:56[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:50:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:50:56[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:50:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:51:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:51:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:51:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:51:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:51:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:51:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:52:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:52:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:52:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:52:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:52:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:52:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:53:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:53:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:54:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:54:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:54:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:54:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:54:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:54:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:54:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:54:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:55:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:55:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:55:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:55:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:55:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:55:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:55:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 18:55:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 18:55:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:55:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 18:55:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 18:55:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 18:55:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 19:00:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 19:00:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 16 msec}[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 15 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 15 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 16 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 16 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:00:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:00:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:00:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:01:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 19:01:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:01:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:01:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:01:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:01:42[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:01:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:02:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:02:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:02:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:02:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:02:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:02:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:14:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:14:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTg4NjksImV4cCI6MTcyMDUxOTQ2OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.nPDA6qCyzbwuuQGN2NPKlaixkel5i92_TTh3806GhZ-sRYoPJnzXWTpAgxyzOwRsxSEFaS2zDW1f-sWHAmgkmQ[0;39m]
[[34m2024-07-09 19:14:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 19:14:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 19:14:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:14:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 19:14:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:14:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 19:14:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjAwNzAsImV4cCI6MTcyMDUyMDY3MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.a3_5XOJksPKsy1p2L6LcnXnVVJ-mOLPuMhN47qV0TvwM5hh4-YVTVOUG-7L5QXnqvIppKw9R3ElRAJUWaI01nw[0;39m]
[[34m2024-07-09 19:14:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:14:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:17:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjAwNzAsImV4cCI6MTcyMDUyMDY3MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.a3_5XOJksPKsy1p2L6LcnXnVVJ-mOLPuMhN47qV0TvwM5hh4-YVTVOUG-7L5QXnqvIppKw9R3ElRAJUWaI01nw[0;39m]
[[34m2024-07-09 19:17:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:17:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:17:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjAwNzAsImV4cCI6MTcyMDUyMDY3MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.a3_5XOJksPKsy1p2L6LcnXnVVJ-mOLPuMhN47qV0TvwM5hh4-YVTVOUG-7L5QXnqvIppKw9R3ElRAJUWaI01nw[0;39m]
[[34m2024-07-09 19:17:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:17:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:17:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjAwNzAsImV4cCI6MTcyMDUyMDY3MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.a3_5XOJksPKsy1p2L6LcnXnVVJ-mOLPuMhN47qV0TvwM5hh4-YVTVOUG-7L5QXnqvIppKw9R3ElRAJUWaI01nw[0;39m]
[[34m2024-07-09 19:17:40[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:17:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:17:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjAwNzAsImV4cCI6MTcyMDUyMDY3MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.a3_5XOJksPKsy1p2L6LcnXnVVJ-mOLPuMhN47qV0TvwM5hh4-YVTVOUG-7L5QXnqvIppKw9R3ElRAJUWaI01nw[0;39m]
[[34m2024-07-09 19:17:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:17:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:17:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjAwNzAsImV4cCI6MTcyMDUyMDY3MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.a3_5XOJksPKsy1p2L6LcnXnVVJ-mOLPuMhN47qV0TvwM5hh4-YVTVOUG-7L5QXnqvIppKw9R3ElRAJUWaI01nw[0;39m]
[[34m2024-07-09 19:17:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:17:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:18:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjAwNzAsImV4cCI6MTcyMDUyMDY3MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.a3_5XOJksPKsy1p2L6LcnXnVVJ-mOLPuMhN47qV0TvwM5hh4-YVTVOUG-7L5QXnqvIppKw9R3ElRAJUWaI01nw[0;39m]
[[34m2024-07-09 19:18:00[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:18:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:19:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjAwNzAsImV4cCI6MTcyMDUyMDY3MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.a3_5XOJksPKsy1p2L6LcnXnVVJ-mOLPuMhN47qV0TvwM5hh4-YVTVOUG-7L5QXnqvIppKw9R3ElRAJUWaI01nw[0;39m]
[[34m2024-07-09 19:19:05[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:19:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:20:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjAwNzAsImV4cCI6MTcyMDUyMDY3MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.a3_5XOJksPKsy1p2L6LcnXnVVJ-mOLPuMhN47qV0TvwM5hh4-YVTVOUG-7L5QXnqvIppKw9R3ElRAJUWaI01nw[0;39m]
[[34m2024-07-09 19:20:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:20:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:20:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 19:20:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjAwNzAsImV4cCI6MTcyMDUyMDY3MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.a3_5XOJksPKsy1p2L6LcnXnVVJ-mOLPuMhN47qV0TvwM5hh4-YVTVOUG-7L5QXnqvIppKw9R3ElRAJUWaI01nw[0;39m]
[[34m2024-07-09 19:20:22[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:20:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:20:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 19:52:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 19:52:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 19:52:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:52:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 19:52:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:52:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjIzNDQsImV4cCI6MTcyMDUyMjk0NCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.7BUTuyzZeCeumTdqgA14cyVloPSduz-KDgS9gY4hA9Z8jYkNpQBQ-TS0F9fxtblp7WFHUawxpfwyCfUn4XRjRg[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 19:59:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 19:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 19:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 19:59:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 19:59:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 19:59:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 19:59:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 19:59:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 20:16:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:17:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:17:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:18:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:18:22[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:18:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:19:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:20:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:20:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:21:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:22:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:23:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:23:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:23:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:23:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:23:26[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:23:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:23:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:24:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:24:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:24:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:24:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:25:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:25:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjI3ODMsImV4cCI6MTcyMDUyMzM4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.83a6QwA21xil7Zn1b0ABJEe6oNetEShYkbf63TJtmQ6yd7mlr4BCQrCmlITol8hSYMep0RwR2FjFcuKjhOVMsw[0;39m]
[[34m2024-07-09 20:25:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:25:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:25:59[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:25:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:25:59[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:25:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:26:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: undefined[0;39m]
[[34m2024-07-09 20:27:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: undefined[0;39m]
[[34m2024-07-09 20:27:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: undefined[0;39m]
[[34m2024-07-09 20:28:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: undefined[0;39m]
[[34m2024-07-09 20:28:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:28:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:28:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:28:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:28:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:28:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:28:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:28:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:28:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:28:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:28:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:28:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:28:45[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:28:45[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:28:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:28:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQ1MjUsImV4cCI6MTcyMDUyNTEyNSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.WxJGxgjWDLGh8-q9v8Es3OtpWjnC07jGnoSmk4MPQb2gvum6D4hBng5iOWitJUJBUSd5EU9ezL9tG_uafjQHGA[0;39m]
[[34m2024-07-09 20:28:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:28:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 20:30:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:30:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:30:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:30:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:30:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:30:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:30:32[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:30:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:32:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:32:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:32:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:32:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:32:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 20:32:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:32:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:32:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:32:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:33:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:33:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:33:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:33:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:33:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:33:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:33:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:33:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:33:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:33:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:33:34[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:33:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:34:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:34:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:34:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:34:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:34:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:34:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:34:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:34:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:36:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:36:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:36:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:36:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:36:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:36:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:36:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:36:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:36:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 210 ms[0;39m]
[[34m2024-07-09 20:36:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:37:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:37:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:37:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:37:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:37:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:37:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:37:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUwMzQsImV4cCI6MTcyMDUyNTYzNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.dtkV7D7ZE1j_ybvP__oJaI4KXAwuVITT4D11O-UzZny4Ru6kvWICdh_uEaVv30WaUj8pUVQoKwh3eGqm5cjNgw[0;39m]
[[34m2024-07-09 20:37:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:37:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:37:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:37:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:37:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUwMzQsImV4cCI6MTcyMDUyNTYzNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.dtkV7D7ZE1j_ybvP__oJaI4KXAwuVITT4D11O-UzZny4Ru6kvWICdh_uEaVv30WaUj8pUVQoKwh3eGqm5cjNgw[0;39m]
[[34m2024-07-09 20:37:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:37:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:37:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:37:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:39:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQyMDYsImV4cCI6MTcyMDUyNDgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.Z_Sv7PUlypLxB1MOOJojHskpj3tTeWZAbinzMf_R3y9SLAvVycQ8W83do19MGudpUtpqlUF-ppryrBMkGN-JVw[0;39m]
[[34m2024-07-09 20:39:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQyMDYsImV4cCI6MTcyMDUyNDgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.Z_Sv7PUlypLxB1MOOJojHskpj3tTeWZAbinzMf_R3y9SLAvVycQ8W83do19MGudpUtpqlUF-ppryrBMkGN-JVw[0;39m]
[[34m2024-07-09 20:39:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:39:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:39:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:39:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:39:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: undefined[0;39m]
[[34m2024-07-09 20:39:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: undefined[0;39m]
[[34m2024-07-09 20:39:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUxNDcsImV4cCI6MTcyMDUyNTc0Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.D_8K6DEVAtYg-VJife1sKtBVshij6nSI8vlg_1VFgzepDL-gLRW2PpybUDItyjN7RsDBoBbo3wAfO-m-tuySXw[0;39m]
[[34m2024-07-09 20:39:42[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:39:42[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:39:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUxNDcsImV4cCI6MTcyMDUyNTc0Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.D_8K6DEVAtYg-VJife1sKtBVshij6nSI8vlg_1VFgzepDL-gLRW2PpybUDItyjN7RsDBoBbo3wAfO-m-tuySXw[0;39m]
[[34m2024-07-09 20:39:46[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:39:46[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:39:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUxNDcsImV4cCI6MTcyMDUyNTc0Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.D_8K6DEVAtYg-VJife1sKtBVshij6nSI8vlg_1VFgzepDL-gLRW2PpybUDItyjN7RsDBoBbo3wAfO-m-tuySXw[0;39m]
[[34m2024-07-09 20:39:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:39:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:39:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUxNDcsImV4cCI6MTcyMDUyNTc0Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.D_8K6DEVAtYg-VJife1sKtBVshij6nSI8vlg_1VFgzepDL-gLRW2PpybUDItyjN7RsDBoBbo3wAfO-m-tuySXw[0;39m]
[[34m2024-07-09 20:39:56[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:39:56[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:39:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUxNDcsImV4cCI6MTcyMDUyNTc0Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.D_8K6DEVAtYg-VJife1sKtBVshij6nSI8vlg_1VFgzepDL-gLRW2PpybUDItyjN7RsDBoBbo3wAfO-m-tuySXw[0;39m]
[[34m2024-07-09 20:39:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:39:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:39:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUxNDcsImV4cCI6MTcyMDUyNTc0Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.D_8K6DEVAtYg-VJife1sKtBVshij6nSI8vlg_1VFgzepDL-gLRW2PpybUDItyjN7RsDBoBbo3wAfO-m-tuySXw[0;39m]
[[34m2024-07-09 20:39:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:39:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:39:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:40:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:40:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:40:05[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:40:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:40:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:40:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:40:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUxNDcsImV4cCI6MTcyMDUyNTc0Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.D_8K6DEVAtYg-VJife1sKtBVshij6nSI8vlg_1VFgzepDL-gLRW2PpybUDItyjN7RsDBoBbo3wAfO-m-tuySXw[0;39m]
[[34m2024-07-09 20:40:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:40:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:40:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:40:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:40:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUxNDcsImV4cCI6MTcyMDUyNTc0Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.D_8K6DEVAtYg-VJife1sKtBVshij6nSI8vlg_1VFgzepDL-gLRW2PpybUDItyjN7RsDBoBbo3wAfO-m-tuySXw[0;39m]
[[34m2024-07-09 20:40:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:40:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:40:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:40:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:40:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:40:41[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:40:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:40:41[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:40:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:40:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:40:51[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:40:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:40:51[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:40:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:41:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:41:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:41:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:42:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:42:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:42:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:42:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:42:51[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:42:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:42:51[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:42:51[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:42:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUzNzEsImV4cCI6MTcyMDUyNTk3MSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.ewC32Hd7pO_gGPuB_7Iv3sqaJ-Y3KkyouTfDl-5qqmsXckQASlu4Ja427A2ejH49mfkqs8RMFyF_R9y0Feb-3g[0;39m]
[[34m2024-07-09 20:42:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:42:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 20:43:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:43:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:43:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:43:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUwMzQsImV4cCI6MTcyMDUyNTYzNCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.dtkV7D7ZE1j_ybvP__oJaI4KXAwuVITT4D11O-UzZny4Ru6kvWICdh_uEaVv30WaUj8pUVQoKwh3eGqm5cjNgw[0;39m]
[[34m2024-07-09 20:43:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:43:59[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:43:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:44:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:44:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:44:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:44:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:44:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:44:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:44:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:44:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:44:15[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:44:15[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:44:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33morg.apache.coyote.http11.Http11Processor[0;39m] [[35mError parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.[0;39m]
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/student/detail?pk=[object%20Object] ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:482)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:262)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-09 20:44:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 20:44:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:45:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:45:24[0;39m [33mWARN [0;39mhttp-nio-8080-exec-5] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:45:24[0;39m [33mWARN [0;39mhttp-nio-8080-exec-9] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:45:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:45:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 20:46:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:46:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:46:19[0;39m [33mWARN [0;39mhttp-nio-8080-exec-3] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:46:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:46:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:46:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:46:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:46:20[0;39m [33mWARN [0;39mhttp-nio-8080-exec-10] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:46:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:46:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:46:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:46:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:46:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:46:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:46:24[0;39m [33mWARN [0;39mhttp-nio-8080-exec-7] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjUyMDYsImV4cCI6MTcyMDUyNTgwNiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.j5sgOJ8Jn1gv2MzFTGxcSNlcQwf4bZ4Y8FzlrmkYa_As3SQnYnnepcokS6sVI90YLn-CXOjlRAL8SQSvzTkqrQ[0;39m]
[[34m2024-07-09 20:46:24[0;39m [33mWARN [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:46:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:46:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:46:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:46:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:46:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:46:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: undefined[0;39m]
[[34m2024-07-09 20:46:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: undefined[0;39m]
[[34m2024-07-09 20:46:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: undefined[0;39m]
[[34m2024-07-09 20:46:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: undefined[0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODMsImV4cCI6MTcyMDUyNjE4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.mvg0-fSF2XHtWH_y0C8uFYe5gMnBrkZxNbbvzeEqLIwvLY3quosXwIbz5d1e3dUXV_xl7LVDDk9MJon1b87SHA[0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODMsImV4cCI6MTcyMDUyNjE4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.mvg0-fSF2XHtWH_y0C8uFYe5gMnBrkZxNbbvzeEqLIwvLY3quosXwIbz5d1e3dUXV_xl7LVDDk9MJon1b87SHA[0;39m]
[[34m2024-07-09 20:47:04[0;39m [33mWARN [0;39mhttp-nio-8080-exec-6] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODMsImV4cCI6MTcyMDUyNjE4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.mvg0-fSF2XHtWH_y0C8uFYe5gMnBrkZxNbbvzeEqLIwvLY3quosXwIbz5d1e3dUXV_xl7LVDDk9MJon1b87SHA[0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODMsImV4cCI6MTcyMDUyNjE4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.mvg0-fSF2XHtWH_y0C8uFYe5gMnBrkZxNbbvzeEqLIwvLY3quosXwIbz5d1e3dUXV_xl7LVDDk9MJon1b87SHA[0;39m]
[[34m2024-07-09 20:47:04[0;39m [33mWARN [0;39mhttp-nio-8080-exec-7] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:47:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODMsImV4cCI6MTcyMDUyNjE4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.mvg0-fSF2XHtWH_y0C8uFYe5gMnBrkZxNbbvzeEqLIwvLY3quosXwIbz5d1e3dUXV_xl7LVDDk9MJon1b87SHA[0;39m]
[[34m2024-07-09 20:47:09[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:47:09[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:47:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODMsImV4cCI6MTcyMDUyNjE4Mywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.mvg0-fSF2XHtWH_y0C8uFYe5gMnBrkZxNbbvzeEqLIwvLY3quosXwIbz5d1e3dUXV_xl7LVDDk9MJon1b87SHA[0;39m]
[[34m2024-07-09 20:47:09[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:47:09[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:47:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:47:10[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:47:10[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:47:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:47:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:47:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:47:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:47:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:47:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:47:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:47:16[0;39m [33mWARN [0;39mhttp-nio-8080-exec-10] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:47:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:48:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:48:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:48:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:48:07[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:48:07[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:48:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:48:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:48:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:48:09[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:48:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:32[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:32[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:32[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:33[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:33[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:33[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:34[0;39m [33mWARN [0;39mhttp-nio-8080-exec-5] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "1'"][0;39m]
[[34m2024-07-09 20:51:34[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:34[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:35[0;39m [33mWARN [0;39mhttp-nio-8080-exec-7] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "1'"][0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:44[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:44[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:44[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:54[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:54[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:51:54[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:51:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
52. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:51:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:51:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:51:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:51:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:53:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:53:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:53:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:53:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:53:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:53:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:53:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:53:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:53:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:53:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:54:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:54:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:54:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:54:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:54:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:54:23[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:23[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:54:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:54:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:54:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:54:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:54:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:54:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:54:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:54:33[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:54:33[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:54:33[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:54:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:54:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:54:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:54:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:54:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:55:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:55:46[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:46[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjU1ODgsImV4cCI6MTcyMDUyNjE4OCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.0kU4_1wSzsLz7dOXRBWwO_qF9zFw4F4e0YFvcUIkRO9VFU7TU-SOoa4F_umfsjhliGivqG7DFOhTQBJ7jwE4Jg[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:55[0;39m [33mWARN [0;39mhttp-nio-8080-exec-5] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: ""][0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:56[0;39m [33mWARN [0;39mhttp-nio-8080-exec-7] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: ""][0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 15 msec}[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:55:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:56:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:09[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:09[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:12[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:12[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:56:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:28[0;39m [33mWARN [0;39mhttp-nio-8080-exec-2] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:56:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:28[0;39m [33mWARN [0;39mhttp-nio-8080-exec-3] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 20:56:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 20:56:34[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:34[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:56:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:34[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:56:37[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:56:37[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 20:56:37[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:56:37[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:57:45[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MTA4MjksImV4cCI6MTcyMDUxMTQyOSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX1RFQUhDRVJcIn0ifQ.V-8MZzYdAHqxkxdDZ1miMEzqMZ-JOFbMeRA1PMtJH1Qpc5CoBjVcHAgMqfPuyEttmsfWnCAWwkQriu9TUai5yw[0;39m]
[[34m2024-07-09 20:57:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:57:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:57:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:57:47[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:57:47[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:57:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:58:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-09 20:58:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-09 20:58:42[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:58:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:58:42[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:58:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:58:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYzMjIsImV4cCI6MTcyMDUyNjkyMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.zhYUqTOxemHKNw1ZSbidBIOmHKQFfjM6zpkmiF_JcTNYeu1V-hcRJyJYcs4jwCVqMWCQT-0BTL6yBkbfjiYQ3w[0;39m]
[[34m2024-07-09 20:58:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:58:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:59:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 20:59:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:59:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 20:59:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 20:59:59[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:59:59[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:59:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 20:59:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 20:59:59[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 20:59:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 21:00:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 21:00:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 21:00:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 21:00:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:00:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:00:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 21:00:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 21:00:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:00:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 21:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 21:00:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 21:00:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 21:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 21:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-09 21:00:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:00:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent1 |김부모 |부      |010-1234-5678 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 21:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 21:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE tea_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-09 21:00:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:00:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-09 21:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYxNDYsImV4cCI6MTcyMDUyNjc0Niwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.cqiBqSA1LvhdRVJDrnBf-qhsvGUlhfyMylPHTiN_XvUD2NeP1NCa3v88Adnf2eE2gvNAwII6YXTlfM0bXCSCzg[0;39m]
[[34m2024-07-09 21:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 21:00:25[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:00:25[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 21:01:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYzMjIsImV4cCI6MTcyMDUyNjkyMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.zhYUqTOxemHKNw1ZSbidBIOmHKQFfjM6zpkmiF_JcTNYeu1V-hcRJyJYcs4jwCVqMWCQT-0BTL6yBkbfjiYQ3w[0;39m]
[[34m2024-07-09 21:01:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:01:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|김학생  |남      |2010-05-15 |010-1111-2222 |김부모 |010-1234-5678 |
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-09 21:01:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 21:01:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 21:01:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 21:01:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYzMjIsImV4cCI6MTcyMDUyNjkyMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.zhYUqTOxemHKNw1ZSbidBIOmHKQFfjM6zpkmiF_JcTNYeu1V-hcRJyJYcs4jwCVqMWCQT-0BTL6yBkbfjiYQ3w[0;39m]
[[34m2024-07-09 21:01:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 21:01:55[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:01:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 21:02:26[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYzMjIsImV4cCI6MTcyMDUyNjkyMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.zhYUqTOxemHKNw1ZSbidBIOmHKQFfjM6zpkmiF_JcTNYeu1V-hcRJyJYcs4jwCVqMWCQT-0BTL6yBkbfjiYQ3w[0;39m]
[[34m2024-07-09 21:02:26[0;39m [33mWARN [0;39mhttp-nio-8080-exec-3] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 21:02:32[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYzMjIsImV4cCI6MTcyMDUyNjkyMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.zhYUqTOxemHKNw1ZSbidBIOmHKQFfjM6zpkmiF_JcTNYeu1V-hcRJyJYcs4jwCVqMWCQT-0BTL6yBkbfjiYQ3w[0;39m]
[[34m2024-07-09 21:02:32[0;39m [33mWARN [0;39mhttp-nio-8080-exec-8] [[33morg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver[0;39m] [[35mResolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "undefined"][0;39m]
[[34m2024-07-09 21:02:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYzMjIsImV4cCI6MTcyMDUyNjkyMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.zhYUqTOxemHKNw1ZSbidBIOmHKQFfjM6zpkmiF_JcTNYeu1V-hcRJyJYcs4jwCVqMWCQT-0BTL6yBkbfjiYQ3w[0;39m]
[[34m2024-07-09 21:02:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 21:02:54[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:02:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 21:03:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYzMjIsImV4cCI6MTcyMDUyNjkyMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.zhYUqTOxemHKNw1ZSbidBIOmHKQFfjM6zpkmiF_JcTNYeu1V-hcRJyJYcs4jwCVqMWCQT-0BTL6yBkbfjiYQ3w[0;39m]
[[34m2024-07-09 21:03:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 21:03:48[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
62. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:03:48[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 21:03:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjYzMjIsImV4cCI6MTcyMDUyNjkyMiwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.zhYUqTOxemHKNw1ZSbidBIOmHKQFfjM6zpkmiF_JcTNYeu1V-hcRJyJYcs4jwCVqMWCQT-0BTL6yBkbfjiYQ3w[0;39m]
[[34m2024-07-09 21:03:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-09 21:03:52[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
 {executed in 0 msec}[0;39m]
[[34m2024-07-09 21:03:52[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-09 21:04:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 21:05:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 21:05:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1MjQzNTksImV4cCI6MTcyMDUyNDk1OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.NS5rH0g0lJPme33-hd7b2NN8ZjbCDxrQll9dvKsYVBRwXdGGN6gNXLZbwtBvb6wBlWaL1XCJTcqJTiulQ74dWw[0;39m]
[[34m2024-07-09 22:12:44[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-09 22:12:44[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown initiated...[0;39m]
[[34m2024-07-09 22:12:44[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown completed.[0;39m]
