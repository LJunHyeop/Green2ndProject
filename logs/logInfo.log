[[34m2024-07-10 15:26:06[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-10 15:26:06[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 3424 (D:\Students\BCH\backEnd\fefu\build\classes\java\main started by Administrator in D:\Students\BCH\backEnd\fefu)[0;39m]
[[34m2024-07-10 15:26:06[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 15:26:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-10 15:26:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-10 15:26:07[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 15:26:07[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 2033 ms[0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@646a4df4[0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-10 15:26:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 15:26:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 15:26:09[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:26:09[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 15:26:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 15:26:09[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 15:26:09[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 15:26:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 15:26:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-10 15:26:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:26:10[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-10 15:26:10[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 5.054 seconds (process running for 5.701)[0;39m]
[[34m2024-07-10 15:26:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 15:26:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 15:26:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 1 ms[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 390 ms[0;39m]
[[34m2024-07-10 15:26:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:26:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-10 15:26:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:26:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-10 15:26:19[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:26:19[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-10 15:26:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTI3NzksImV4cCI6MTcyMDU5MzM3OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.GbPKytjU0ZWZrc7FjreSAFR9SbVIb8eXjuyTEOSU_RUlZ-bRfCIoD26IW7JB24hRZzxKzHWQNMq76y0xdqpgoQ[0;39m]
[[34m2024-07-10 15:26:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 15:26:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 2 msec}[0;39m]
[[34m2024-07-10 15:26:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 15:26:35[0;39m [33mWARN [0;39mhttp-nio-8080-exec-2] [[33morg.mariadb.jdbc.message.server.ErrorPacket[0;39m] [[35mError: 1052-23000: Column 'class_id' in order clause is ambiguous[0;39m]
[[34m2024-07-10 15:26:35[0;39m [31mERROR[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY class_id
 {FAILED after 1 msec}[0;39m]
java.sql.SQLIntegrityConstraintViolationException: (conn=76) Column 'class_id' in order clause is ambiguous
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy155.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy166.selPrevEtc(Unknown Source)
	at com.green.fefu.student.service.StudentServiceImpl.getStudentDetail(StudentServiceImpl.java:192)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.fefu.student.service.StudentServiceImpl$$SpringCGLIB$$0.getStudentDetail(<generated>)
	at com.green.fefu.student.service.StudentControllerImpl.getStudentDetail(StudentControllerImpl.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-10 15:26:49[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 15:26:49[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-10 15:26:49[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-10 15:26:53[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-10 15:26:53[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 2972 (D:\Students\BCH\backEnd\fefu\build\classes\java\main started by Administrator in D:\Students\BCH\backEnd\fefu)[0;39m]
[[34m2024-07-10 15:26:53[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 15:26:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-10 15:26:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-10 15:26:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 15:26:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 15:26:54[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 15:26:54[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:26:54[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 15:26:54[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 15:26:54[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 15:26:54[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1582 ms[0;39m]
[[34m2024-07-10 15:26:54[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-10 15:26:55[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6db91c30[0;39m]
[[34m2024-07-10 15:26:55[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-10 15:26:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 15:26:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-10 15:26:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 15:26:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 15:26:55[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:26:55[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 15:26:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 15:26:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 15:26:56[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 15:26:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 15:26:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-10 15:26:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:26:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-10 15:26:56[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.254 seconds (process running for 4.7)[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 1 ms[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTI3NzksImV4cCI6MTcyMDU5MzM3OSwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.GbPKytjU0ZWZrc7FjreSAFR9SbVIb8eXjuyTEOSU_RUlZ-bRfCIoD26IW7JB24hRZzxKzHWQNMq76y0xdqpgoQ[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 2 msec}[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 2 msec}[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 15:26:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 15:27:06[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 15:27:06[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-10 15:27:06[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-10 15:27:49[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-10 15:27:49[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 7564 (D:\Students\BCH\backEnd\fefu\build\classes\java\main started by Administrator in D:\Students\BCH\backEnd\fefu)[0;39m]
[[34m2024-07-10 15:27:49[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 15:27:49[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-10 15:27:49[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-10 15:27:50[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 15:27:50[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 14 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1751 ms[0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1145a022[0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 15:27:51[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 15:27:52[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 15:27:52[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 15:27:52[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 15:27:52[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 15:27:52[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.521 seconds (process running for 4.978)[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:27:53[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:27:54[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 375 ms[0;39m]
[[34m2024-07-10 15:28:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:28:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 15:28:00[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 2 msec}[0;39m]
[[34m2024-07-10 15:28:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 15:28:00[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:28:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 15:28:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 15:28:00[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 15:28:30[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 15:28:30[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-10 15:28:30[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-10 15:51:53[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-10 15:51:53[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 11248 (D:\Students\BCH\backEnd\fefu\build\classes\java\main started by Administrator in D:\Students\BCH\backEnd\fefu)[0;39m]
[[34m2024-07-10 15:51:53[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 15:51:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-10 15:51:53[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-10 15:51:54[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 15:51:54[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 15:51:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 15:51:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:51:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 15:51:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 15:51:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 15:51:55[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 2015 ms[0;39m]
[[34m2024-07-10 15:51:56[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-10 15:51:56[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7e10620f[0;39m]
[[34m2024-07-10 15:51:56[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-10 15:51:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 15:51:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-10 15:51:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 15:51:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 15:51:56[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:51:56[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 15:51:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 15:51:56[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 15:51:57[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 15:51:57[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 15:51:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-10 15:51:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:51:58[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-10 15:51:58[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.947 seconds (process running for 5.421)[0;39m]
[[34m2024-07-10 15:51:58[0;39m [32mINFO [0;39mRMI TCP Connection(5)-192.168.0.48] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 15:51:58[0;39m [32mINFO [0;39mRMI TCP Connection(5)-192.168.0.48] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 15:51:58[0;39m [32mINFO [0;39mRMI TCP Connection(5)-192.168.0.48] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-10 15:52:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:52:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:52:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:52:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:52:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:52:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:52:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:52:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:52:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:52:02[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 383 ms[0;39m]
[[34m2024-07-10 15:52:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:52:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-10 15:52:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:52:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-10 15:52:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:52:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-10 15:54:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:54:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-10 15:54:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 15:54:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-10 15:54:14[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:54:14[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-10 15:54:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:54:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:54:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:54:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:54:58[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-10 15:55:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:55:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-10 15:55:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 15:55:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-10 15:55:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-10 15:55:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 15:55:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-10 15:55:08[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:55:08[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 218 ms[0;39m]
[[34m2024-07-10 15:55:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 15:55:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 15:55:41[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 15:55:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |김학생  |남      |2010-05-15 |010-1111-2222 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 15:55:41[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 15:55:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 15:55:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 15:55:41[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 15:57:59[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)[0;39m]
[[34m2024-07-10 15:57:59[0;39m [32mINFO [0;39mThread-5] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:57:59[0;39m [32mINFO [0;39mThread-5] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 15:57:59[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-10 15:57:59[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-10 15:57:59[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 11248 (D:\Students\BCH\backEnd\fefu\build\classes\java\main started by Administrator in D:\Students\BCH\backEnd\fefu)[0;39m]
[[34m2024-07-10 15:57:59[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 15:57:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 15:57:59[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 499 ms[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Starting...[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@237f194[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Start completed.[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
11. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 15:58:00[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 15:58:00[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.388 seconds (process running for 368.123)[0;39m]
[[34m2024-07-10 15:58:00[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[[34m2024-07-10 15:58:06[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 15:58:06[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown initiated...[0;39m]
[[34m2024-07-10 15:58:06[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown completed.[0;39m]
[[34m2024-07-10 16:17:04[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-10 16:17:04[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 13904 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-10 16:17:04[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 16:17:04[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-10 16:17:04[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-10 16:17:05[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 16:17:05[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 11 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1606 ms[0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42c77852[0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-10 16:17:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 16:17:07[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 16:17:07[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:17:07[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 16:17:07[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 16:17:07[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 16:17:07[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 16:17:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 16:17:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-10 16:17:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 16:17:08[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-10 16:17:08[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.452 seconds (process running for 4.913)[0;39m]
[[34m2024-07-10 16:17:09[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 16:17:09[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 16:17:09[0;39m [32mINFO [0;39mRMI TCP Connection(1)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[2024-07-10 16:17:35 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-10 16:17:35 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 14528 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-10 16:17:35 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [The following 1 profile is active: "tdd"]
[2024-07-10 16:17:35 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-10 16:17:36 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1537c744]
[2024-07-10 16:17:36 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-10 16:17:36 WARN Test worker] [org.mariadb.jdbc.message.server.ErrorPacket] [Error: 1050-42S01: Table 'parents' already exists]
[2024-07-10 16:17:36 ERRORTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
 {FAILED after 2 msec}]
java.sql.SQLSyntaxErrorException: (conn=248) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
[2024-07-10 16:17:36 WARN Test worker] [org.springframework.context.annotation.AnnotationConfigApplicationContext] [Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )]
[2024-07-10 16:17:36 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-10 16:17:36 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[2024-07-10 16:17:36 INFO Test worker] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] [

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.]
[2024-07-10 16:17:36 ERRORTest worker] [org.springframework.boot.SpringApplication] [Application run failed]
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 109 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=248) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 119 common frames omitted
[2024-07-10 16:17:36 WARN Test worker] [org.springframework.test.context.TestContextManager] [Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.green.fefu.parents.ParentsUserMapperTest@7b91d9f]]
java.lang.IllegalStateException: Failed to load ApplicationContext for [MergedContextConfiguration@615b5480 testClass = com.green.fefu.parents.ParentsUserMapperTest, locations = [], classes = [com.green.fefu.FefuApplication], contextInitializerClasses = [], activeProfiles = ["tdd"], propertySourceDescriptors = [], propertySourceProperties = ["org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6f8f9349, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@d7f3f2ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3dddefd8, [ImportsContextCustomizer@24691c5 key = [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5ed731d0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@275fe372, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@81d1dc09], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 86 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of file [D:\2024-01\backEnd\fefu\build\resources\main\schema.sql]: CREATE TABLE `PARENTS` ( `parents_id` BIGINT PRIMARY KEY AUTO_INCREMENT, `uid` VARCHAR(30) not NULL UNIQUE, `upw` VARCHAR(70) NULL, `nm` VARCHAR(20) not NULL, `phone` VARCHAR(20) not NULL, `sub_phone` VARCHAR(20) NULL, `email` VARCHAR(255) NULL UNIQUE, `connet` VARCHAR(10) not NULL, `auth` VARCHAR(30) not NULL DEFAULT 'ROLE_PARENTS', `addr` VARCHAR(300) NULL, `acept` INT NOT NULL DEFAULT 2, created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, updated_at DATETIME ON UPDATE CURRENT_TIMESTAMP )
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:98)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 109 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: (conn=248) Table 'parents' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 119 common frames omitted
[2024-07-10 16:17:46 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-10 16:17:46 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 11912 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-10 16:17:46 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-10 16:17:47 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-10 16:17:47 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@35d7386b]
[2024-07-10 16:17:47 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-10 16:17:47 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.208 seconds (process running for 2.123)]
[2024-07-10 16:17:47 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = NULL
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-10 16:17:47 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO parents
        SET uid = 'p1'
            , upw = '1212'
            , nm = '홍길동'
            , phone = '010-1234-1234'
            , sub_phone = NULL
            , email = NULL
            , connet = '부'
            , addr = NULL
 {executed in 0 msec}]
[2024-07-10 16:17:47 INFO Test worker] [jdbc.resultsettable] [
|----------|
|insert_id |
|----------|
|46        |
|----------|
]
[2024-07-10 16:17:47 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE parents
        SET upw = '123123'
        WHERE parents_id = 46
 {executed in 0 msec}]
[2024-07-10 16:17:47 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT parents_id AS parentsId
                , uid
                , upw
                , nm
                , phone
                , sub_phone AS subPhone
                , email
                , connet
                , auth
                , addr
        FROM parents
        WHERE parents_id = 0
 {executed in 0 msec}]
[2024-07-10 16:17:47 INFO Test worker] [jdbc.resultsettable] [
|-----------|----|----|---|------|----------|------|-------|-----|-----|
|parents_id |uid |upw |nm |phone |sub_phone |email |connet |auth |addr |
|-----------|----|----|---|------|----------|------|-------|-----|-----|
|-----------|----|----|---|------|----------|------|-------|-----|-----|
]
[2024-07-10 16:17:47 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-10 16:17:47 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:18:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 406 ms[0;39m]
[[34m2024-07-10 16:21:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:21:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:21:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:21:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:21:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:21:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:21:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:21:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:21:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:21:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 171 ms[0;39m]
[[34m2024-07-10 16:23:36[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 16:23:36[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-10 16:23:36[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-10 16:23:38[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-10 16:23:38[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 13768 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-10 16:23:38[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 16:23:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-10 16:23:38[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-10 16:23:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 16:23:39[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 11 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1684 ms[0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7466f797[0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 16:23:40[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:23:40[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 16:23:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 16:23:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 16:23:41[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 16:23:41[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 16:23:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-10 16:23:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 16:23:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-10 16:23:42[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.422 seconds (process running for 4.868)[0;39m]
[[34m2024-07-10 16:23:42[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.164] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 16:23:42[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 16:23:42[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-10 16:24:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:24:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-10 16:24:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:24:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-10 16:24:11[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:24:11[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-10 16:24:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:24:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-10 16:24:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:24:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-10 16:24:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:24:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-10 16:24:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:24:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-10 16:24:42[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:24:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:24:42[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 2
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:24:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|----|----|
|class_id |etc |nm  |
|---------|----|----|
|101      |null|홍길동 |
|---------|----|----|
[0;39m]
[[34m2024-07-10 16:24:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:24:42[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 0[0;39m]
[[34m2024-07-10 16:25:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:25:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-10 16:25:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:25:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:25:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 2
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:25:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|----|----|
|class_id |etc |nm  |
|---------|----|----|
|101      |null|홍길동 |
|---------|----|----|
[0;39m]
[[34m2024-07-10 16:25:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:25:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 0[0;39m]
[[34m2024-07-10 16:28:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:28:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-10 16:28:05[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:28:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:28:05[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 2
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:28:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|----|----|
|class_id |etc |nm  |
|---------|----|----|
|101      |null|홍길동 |
|---------|----|----|
[0;39m]
[[34m2024-07-10 16:28:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:28:05[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 0[0;39m]
[[34m2024-07-10 16:28:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:28:30[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mupdateStudent req : updateStudentReq(name=홍길동, phone=010-0000-0000, addr=서울 판교로 112, zoneCode=1234, etc=갑각류 알러지 있음, pk=1, fullAddr=null)[0;39m]
[[34m2024-07-10 16:28:30[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE student
         SET name = '홍길동'

                , phone = '010-0000-0000'

                , addr = '1234 # 서울 판교로 112'

                , etc = '갑각류 알러지 있음' 
        WHERE stu_id = 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:29:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:29:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-10 16:29:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:29:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:29:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 2
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:29:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|----|----|
|class_id |etc |nm  |
|---------|----|----|
|101      |null|홍길동 |
|---------|----|----|
[0;39m]
[[34m2024-07-10 16:29:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:29:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 0[0;39m]
[[34m2024-07-10 16:29:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:29:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-10 16:29:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:29:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:29:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 2
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:29:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|----|----|
|class_id |etc |nm  |
|---------|----|----|
|101      |null|홍길동 |
|---------|----|----|
[0;39m]
[[34m2024-07-10 16:29:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:29:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 0[0;39m]
[[34m2024-07-10 16:31:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:31:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:31:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:31:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:31:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:31:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:31:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:31:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:33:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:33:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-10 16:33:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:33:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:33:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 2
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:33:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|----|----|
|class_id |etc |nm  |
|---------|----|----|
|101      |null|홍길동 |
|---------|----|----|
[0;39m]
[[34m2024-07-10 16:33:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:33:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 0[0;39m]
[[34m2024-07-10 16:35:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:35:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-10 16:35:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:35:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-10 16:35:50[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:35:50[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-10 16:36:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTY5NTAsImV4cCI6MTcyMTg5Mjk1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.A8OEhit1OCSvvAuAWkJ21dPHtJ8GOGbhGyADvFWfmNE2UW_47V4iyPQBQ2sXojE8LBZDSUzToTWkWkNykYppxQ[0;39m]
[[34m2024-07-10 16:36:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:36:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:36:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:36:06[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:36:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:36:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:36:06[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:38:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:38:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 2[0;39m]
[[34m2024-07-10 16:38:10[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 2
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:38:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr          |etc |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
|2      |이학생  |여      |2010-07-20 |010-2222-3333 |123 # 서울시 강남구 |null|2024-07-04 08:02:22 |101      |parent2 |이부모 |부      |010-2345-6789 |null|홍길동 |
|-------|-----|-------|-----------|--------------|--------------|----|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:38:10[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 2
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:38:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|----|----|
|class_id |etc |nm  |
|---------|----|----|
|101      |null|홍길동 |
|---------|----|----|
[0;39m]
[[34m2024-07-10 16:38:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:38:10[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 0[0;39m]
[[34m2024-07-10 16:38:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:38:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:38:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:38:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:38:31[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:38:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:38:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:38:31[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:38:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTY5NTAsImV4cCI6MTcyMTg5Mjk1MCwic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.A8OEhit1OCSvvAuAWkJ21dPHtJ8GOGbhGyADvFWfmNE2UW_47V4iyPQBQ2sXojE8LBZDSUzToTWkWkNykYppxQ[0;39m]
[[34m2024-07-10 16:38:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:38:46[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:38:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:38:46[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:38:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:38:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:38:46[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:43:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:43:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:43:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:43:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:43:36[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:43:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:43:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:43:36[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:43:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:43:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:43:39[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:43:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:43:39[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:43:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:43:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:43:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:43:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:43:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:43:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:43:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:43:57[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:43:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:43:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:43:57[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:44:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:44:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:44:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:44:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:44:01[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:44:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:44:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:44:01[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:44:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:44:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:44:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:44:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:44:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:44:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:44:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:44:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:44:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:44:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:44:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:44:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:44:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:44:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:44:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:44:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:44:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:44:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:44:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:44:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:44:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:44:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:44:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:44:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:44:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 16:44:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:44:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:44:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:44:29[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:44:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:44:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:44:29[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:48:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:48:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:48:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:48:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:48:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:48:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:48:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:48:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:48:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:48:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:48:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:48:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:48:24[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:48:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:48:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:48:24[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:51:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:51:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCheckDuplicate req: CheckDuplicateReq(id=rlacjf1, email=null)[0;39m]
[[34m2024-07-10 16:51:04[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'rlacjf1'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:51:04[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-10 16:51:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:51:55[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=rlacjf1, password=Rlacjf12!, name=김철, phone=053-1111-1111, email=asdsad@naver.net, gender=여자, birth=2024-01-01, zoneCode=38800, addr=경북 영천시 신녕면 대학길 5-13 안녕, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-10 16:52:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:52:17[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=rlacjf1, password=Rlacjf12!, name=김철, phone=011-1111-1111, email=asdsad@naver.net, gender=여자, birth=2024-01-01, zoneCode=38800, addr=경북 영천시 신녕면 대학길 5-13 안녕, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=rlacjf1, password=Rlacjf12!, name=김철, phone=010-1111-1111, email=asdsad@naver.net, gender=여자, birth=2024-01-01, zoneCode=38800, addr=경북 영천시 신녕면 대학길 5-13 안녕, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : rlacjf1[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$i7VCX2qLVc0X6sZVbBwHTubQ/0A5mzj.zaea518NdrM0DRjq7LhiK[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 김철[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : asdsad@naver.net[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-1111-1111[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 여자[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 38800 # 경북 영천시 신녕면 대학길 5-13 안녕[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'rlacjf1'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|tea_id |uid |upw |nm |phone |email |gender |auth |birth |addr |acept |created_at |updated_at |
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
|-------|----|----|---|------|------|-------|-----|------|-----|------|-----------|-----------|
[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TEACHER
         SET uid = 'rlacjf1',
            upw = '$2a$10$i7VCX2qLVc0X6sZVbBwHTubQ/0A5mzj.zaea518NdrM0DRjq7LhiK',
            nm = '김철',
            phone = '010-1111-1111',
            email = 'asdsad@naver.net',
            gender = '여자',

                birth = '2024-01-01',

                addr = '38800 # 경북 영천시 신녕면 대학길 5-13 안녕'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO TEACHER
         SET uid = 'rlacjf1',
            upw = '$2a$10$i7VCX2qLVc0X6sZVbBwHTubQ/0A5mzj.zaea518NdrM0DRjq7LhiK',
            nm = '김철',
            phone = '010-1111-1111',
            email = 'asdsad@naver.net',
            gender = '여자',

                birth = '2024-01-01',

                addr = '38800 # 경북 영천시 신녕면 대학길 5-13 안녕'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:52:34[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|----------|
|insert_id |
|----------|
|37        |
|----------|
[0;39m]
[[34m2024-07-10 16:52:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:52:38[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mCreateTeacher req: CreateTeacherReq(teacherId=rlacjf1, password=Rlacjf12!, name=김철, phone=010-1111-1111, email=asdsad@naver.net, gender=여자, birth=2024-01-01, zoneCode=38800, addr=경북 영천시 신녕면 대학길 5-13 안녕, teacherPk=null, fullAddr=null)[0;39m]
[[34m2024-07-10 16:52:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : rlacjf1[0;39m]
[[34m2024-07-10 16:52:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : $2a$10$QPNPW7CP6IwbipkRb/Bgu.QOv8CUUui2izHoJqWxYRHDiNPpW2fEq[0;39m]
[[34m2024-07-10 16:52:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 김철[0;39m]
[[34m2024-07-10 16:52:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : asdsad@naver.net[0;39m]
[[34m2024-07-10 16:52:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 010-1111-1111[0;39m]
[[34m2024-07-10 16:52:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 여자[0;39m]
[[34m2024-07-10 16:52:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.chcommon.Validation[0;39m] [[35mstr : 38800 # 경북 영천시 신녕면 대학길 5-13 안녕[0;39m]
[[34m2024-07-10 16:52:39[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'rlacjf1'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:52:39[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|--------|-------------------------------------------------------------|---|--------------|-----------------|-------|-------------|-----------|-------------------------------|------|--------------------|-----------|
|tea_id |uid     |upw                                                          |nm |phone         |email            |gender |auth         |birth      |addr                           |acept |created_at          |updated_at |
|-------|--------|-------------------------------------------------------------|---|--------------|-----------------|-------|-------------|-----------|-------------------------------|------|--------------------|-----------|
|37     |rlacjf1 |$2a$10$i7VCX2qLVc0X6sZVbBwHTubQ/0A5mzj.zaea518NdrM0DRjq7LhiK |김철 |010-1111-1111 |asdsad@naver.net |여자     |ROLE_TEAHCER |2024-01-01 |38800 # 경북 영천시 신녕면 대학길 5-13 안녕 |2     |2024-07-10 16:52:34 |null       |
|-------|--------|-------------------------------------------------------------|---|--------------|-----------------|-------|-------------|-----------|-------------------------------|------|--------------------|-----------|
[0;39m]
[[34m2024-07-10 16:54:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 16:54:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 16:54:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:54:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 16:54:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 16:54:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 16:54:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 16:54:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 16:59:05[0;39m [32mINFO [0;39mFile Watcher] [[33morg.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener[0;39m] [[35mRestarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)[0;39m]
[[34m2024-07-10 16:59:05[0;39m [32mINFO [0;39mThread-5] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStopping ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 16:59:05[0;39m [32mINFO [0;39mThread-5] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 16:59:05[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-10 16:59:05[0;39m [32mINFO [0;39mThread-5] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-10 16:59:05[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 13768 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-10 16:59:05[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 16:59:05[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 16:59:05[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 521 ms[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Starting...[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7476a89e[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Start completed.[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
21. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 16:59:06[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 16:59:06[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 1.452 seconds (process running for 2129.331)[0;39m]
[[34m2024-07-10 16:59:06[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener[0;39m] [[35mCondition evaluation unchanged[0;39m]
[2024-07-10 17:02:58 INFO background-preinit] [org.hibernate.validator.internal.util.Version] [HV000001: Hibernate Validator 8.0.1.Final]
[2024-07-10 17:02:58 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Starting ParentsUserMapperTest using Java 17.0.11 with PID 9048 (started by Administrator in D:\2024-01\backEnd\fefu)]
[2024-07-10 17:02:58 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [No active profile set, falling back to 1 default profile: "default"]
[2024-07-10 17:02:59 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Starting...]
[2024-07-10 17:02:59 INFO Test worker] [com.zaxxer.hikari.pool.HikariPool] [HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@21002393]
[2024-07-10 17:02:59 INFO Test worker] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Start completed.]
[2024-07-10 17:02:59 INFO Test worker] [com.green.fefu.parents.ParentsUserMapperTest] [Started ParentsUserMapperTest in 1.233 seconds (process running for 2.205)]
[2024-07-10 17:02:59 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO score_sign
        SET stu_id = 1
            , year = 2024
            , semester = 1
            , pic = 'test-pic.png'
 {executed in 0 msec}]
[2024-07-10 17:02:59 DEBUGTest worker] [jdbc.sqltiming] [ com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO score_sign
        SET stu_id = 1
            , year = 2024
            , semester = 1
            , pic = 'test-pic.png'
 {executed in 0 msec}]
[2024-07-10 17:02:59 INFO Test worker] [jdbc.resultsettable] [
|----------|
|insert_id |
|----------|
|13        |
|----------|
]
[2024-07-10 17:02:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown initiated...]
[2024-07-10 17:02:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [HikariPool-1 - Shutdown completed.]
[[34m2024-07-10 17:03:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 17:03:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 17:03:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 0 ms[0;39m]
[[34m2024-07-10 17:03:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:03:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:03:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:03:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 17:03:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:03:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:03:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:03:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:04:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:04:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:04:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:04:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:04:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:04:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:04:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:04:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:04:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:04:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 359 ms[0;39m]
[[34m2024-07-10 17:04:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:04:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.teacher.service.TeacherControllerImpl[0;39m] [[35mLogInTeacher req: LogInTeacherReq(teacherId=test1234, password=Test1234!@#$)[0;39m]
[[34m2024-07-10 17:04:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT tea_id AS pk, uid AS id, upw AS password,
                nm AS name, phone, email, gender, auth,
                birth, addr, acept,
                created_at AS createdAt, updated_at AS updatedAt
        FROM teacher
         WHERE  uid = 'test1234'
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:04:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|tea_id |uid      |upw                                                          |nm  |phone         |email               |gender |auth       |birth      |addr          |acept |created_at          |updated_at          |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
|1      |test1234 |$2a$10$SC5oEMeIPMVTM8R/TYwRl.NQsCiOgLrNIna2eQl3PXXXQ7YVIh5/C |홍길동 |010-3333-4444 |teacher1@school.com |여      |ROLE_ADMIN |1980-03-10 |123 # 서울시 강남구 |2     |2024-07-04 08:02:22 |2024-07-09 18:02:11 |
|-------|---------|-------------------------------------------------------------|----|--------------|--------------------|-------|-----------|-----------|--------------|------|--------------------|--------------------|
[0;39m]
[[34m2024-07-10 17:04:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        c.class_id AS classId
        FROM
        class AS c
        JOIN
        teacher AS t
        ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        AND YEAR(c.created_at) = YEAR(CURDATE())
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:04:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|
|class_id |
|---------|
|101      |
|---------|
[0;39m]
[[34m2024-07-10 17:05:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:05:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:05:03[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:05:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 17:05:03[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:05:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:05:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:05:03[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:05:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:05:20[0;39m [31mERROR[0;39mhttp-nio-8080-exec-7] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet][0;39m] [[35mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: 아이디 형식이 잘못되었습니다.] with root cause[0;39m]
java.lang.IllegalArgumentException: 아이디 형식이 잘못되었습니다.
	at com.green.fefu.parents.ParentsUserServiceImpl.postParentsUser(ParentsUserServiceImpl.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.fefu.parents.ParentsUserServiceImpl$$SpringCGLIB$$0.postParentsUser(<generated>)
	at com.green.fefu.parents.ParentsUserControllerImpl.postParents(ParentsUserControllerImpl.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.green.fefu.security.jwt.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:43)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[[34m2024-07-10 17:06:28[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-10 17:06:28[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 9308 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-10 17:06:28[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 17:06:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-10 17:06:28[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-10 17:06:29[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 17:06:29[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 11 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1775 ms[0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5db4c05a[0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 17:06:30[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:06:30[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 17:06:31[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 17:06:31[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 17:06:31[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 17:06:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 17:06:32[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mUnable to start LiveReload server[0;39m]
[[34m2024-07-10 17:06:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 17:06:32[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[0;39m] [[35mException encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'[0;39m]
[[34m2024-07-10 17:06:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 17:06:32[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-10 17:06:32[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
[[34m2024-07-10 17:06:32[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger[0;39m] [[35m

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.[0;39m]
[[34m2024-07-10 17:06:32[0;39m [31mERROR[0;39mrestartedMain] [[33morg.springframework.boot.diagnostics.LoggingFailureAnalysisReporter[0;39m] [[35m

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.
[0;39m]
[[34m2024-07-10 17:06:40[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 17:06:40[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown initiated...[0;39m]
[[34m2024-07-10 17:06:40[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-2 - Shutdown completed.[0;39m]
[[34m2024-07-10 17:06:42[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-10 17:06:42[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.11 with PID 14588 (D:\2024-01\backEnd\fefu\build\classes\java\main started by Administrator in D:\2024-01\backEnd\fefu)[0;39m]
[[34m2024-07-10 17:06:42[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 17:06:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-10 17:06:42[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-10 17:06:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 17:06:43[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1580 ms[0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@41004e51[0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 17:06:44[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:06:44[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 17:06:45[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 17:06:45[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 17:06:45[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 17:06:45[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 17:06:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-10 17:06:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 17:06:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-10 17:06:46[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.205 seconds (process running for 4.642)[0;39m]
[[34m2024-07-10 17:06:47[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 17:06:47[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 17:06:47[0;39m [32mINFO [0;39mRMI TCP Connection(3)-192.168.0.164] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-10 17:06:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:06:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:06:56[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:06:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 17:06:56[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:06:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:06:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:06:56[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:07:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:07:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:07:09[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:07:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 17:07:09[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:07:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:07:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:07:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:07:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:07:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:07:12[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:07:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 17:07:12[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-8] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:07:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:07:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:07:12[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:07:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:07:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:07:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:07:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 17:07:13[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:07:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:07:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:07:13[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:07:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:07:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:07:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:07:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 17:07:16[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-5] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:07:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:07:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:07:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:07:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:07:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:07:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:07:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |null|정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|----|----|
[0;39m]
[[34m2024-07-10 17:07:18[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:07:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:07:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:07:18[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:09:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:09:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:09:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-10 17:09:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mList : [][0;39m]
[[34m2024-07-10 17:09:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:09:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-10 17:09:20[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-7] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        score_id AS scoreId
        ,stu_id AS stuId
        ,class_id AS classId
        ,subject_name AS name
        ,year AS year
        ,exam AS exam
        ,mark AS mark
        ,class_avg AS classAvg
        ,class_rank AS classRank
        ,school_avg AS schoolRank
        ,midterm_avg AS midtermAvg
        ,final_avg AS finalAvg
        ,subject_avg AS subjectAvg

            FROM view_score_semester1

         WHERE stu_id =1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:09:20[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|---------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|score_id |stu_id |class_id |subject_name |year |exam |mark |class_avg |class_rank |school_avg |midterm_avg |final_avg |subject_avg |
|---------|-------|---------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|6        |1      |201      |과학           |2023 |2    |90   |90.0      |1          |90         |[null]      |90.0000   |90.0        |
|7        |1      |201      |국어           |2023 |1    |80   |80.0      |1          |80         |80.0        |[null]    |80.0        |
|35       |1      |101      |미술           |2023 |1    |96   |96.0      |1          |96         |96.0        |[null]    |96.0        |
|36       |1      |201      |미술           |2023 |1    |96   |96.0      |1          |96         |96.0        |[null]    |96.0        |
|1        |1      |201      |수학           |2023 |1    |85   |85.0      |1          |85         |85.0        |[null]    |85.0        |
|34       |1      |201      |영어           |2023 |1    |96   |96.0      |1          |84         |96.0        |[null]    |96.0        |
|30       |1      |201      |과학           |2024 |1    |1    |1.0       |1          |1          |1.0         |[null]    |1.0         |
|---------|-------|---------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
[0;39m]
[[34m2024-07-10 17:10:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:10:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:10:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-10 17:10:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.score.ScoreServiceImpl[0;39m] [[35mList : [][0;39m]
[[34m2024-07-10 17:10:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        v.scoreId,
        s.stu_id AS stuId,
        v.latestGrade,
        scr.semester AS latestSemester,
        scr.year AS latestYear
        FROM student s
        left JOIN student_classes sc ON s.stu_id = sc.stu_id
        left JOIN score scr ON sc.sc_id = scr.sc_id
        left JOIN (
        SELECT LEFT(a.grade, 1) AS latestGrade ,
        b.score_id AS scoreId
        FROM student a
        LEFT JOIN score b
        ON a.stu_id = b.sc_id
        WHERE stu_id = 1
        ) v
        ON left(s.grade,1) = v.latestGrade
        WHERE s.stu_id = 1
        GROUP BY s.stu_id
        ORDER BY s.stu_id ;
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 17:10:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|------------|---------|-----|
|score_id |stu_id |latestgrade |semester |year |
|---------|-------|------------|---------|-----|
|1        |1      |2           |1        |2023 |
|---------|-------|------------|---------|-----|
[0;39m]
[[34m2024-07-10 17:10:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        score_id AS scoreId
        ,stu_id AS stuId
        ,class_id AS classId
        ,subject_name AS name
        ,year AS year
        ,exam AS exam
        ,mark AS mark
        ,class_avg AS classAvg
        ,class_rank AS classRank
        ,school_avg AS schoolRank
        ,midterm_avg AS midtermAvg
        ,final_avg AS finalAvg
        ,subject_avg AS subjectAvg

            FROM view_score_semester1

         WHERE stu_id =1
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 17:10:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|---------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|score_id |stu_id |class_id |subject_name |year |exam |mark |class_avg |class_rank |school_avg |midterm_avg |final_avg |subject_avg |
|---------|-------|---------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
|6        |1      |201      |과학           |2023 |2    |90   |90.0      |1          |90         |[null]      |90.0000   |90.0        |
|7        |1      |201      |국어           |2023 |1    |80   |80.0      |1          |80         |80.0        |[null]    |80.0        |
|35       |1      |101      |미술           |2023 |1    |96   |96.0      |1          |96         |96.0        |[null]    |96.0        |
|36       |1      |201      |미술           |2023 |1    |96   |96.0      |1          |96         |96.0        |[null]    |96.0        |
|1        |1      |201      |수학           |2023 |1    |85   |85.0      |1          |85         |85.0        |[null]    |85.0        |
|34       |1      |201      |영어           |2023 |1    |96   |96.0      |1          |84         |96.0        |[null]    |96.0        |
|30       |1      |201      |과학           |2024 |1    |1    |1.0       |1          |1          |1.0         |[null]    |1.0         |
|---------|-------|---------|-------------|-----|-----|-----|----------|-----------|-----------|------------|----------|------------|
[0;39m]
[[34m2024-07-10 17:11:09[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:16[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-7] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:11:44[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33morg.springdoc.api.AbstractOpenApiResource[0;39m] [[35mInit duration for springdoc-openapi is: 354 ms[0;39m]
[[34m2024-07-10 17:17:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:17:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:17:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:17:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|-----------------------------------------|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic                                      |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|-----------------------------------------|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |47872175-b41f-4080-bcf9-dc72604c46d5.png |정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|-----------------------------------------|----|
[0;39m]
[[34m2024-07-10 17:17:21[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-9] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 17:17:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:17:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:17:21[0;39m [32mINFO [0;39mhttp-nio-8080-exec-9] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:17:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:17:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:17:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:17:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|-----------------------------------------|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic                                      |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|-----------------------------------------|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |47872175-b41f-4080-bcf9-dc72604c46d5.png |정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|-----------------------------------------|----|
[0;39m]
[[34m2024-07-10 17:17:27[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-4] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 17:17:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:17:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:17:27[0;39m [32mINFO [0;39mhttp-nio-8080-exec-4] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:17:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:17:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentControllerImpl[0;39m] [[35mgetStudentDetail req : 1[0;39m]
[[34m2024-07-10 17:17:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.stu_id AS pk,
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        s.addr AS addr,
        s.etc AS etc,
        s.created_at AS createdAt,
        sc.class_id AS uClass,
        p.uid AS parentId,
        p.nm AS parentName,
        p.connet AS connet,
        p.phone AS parentPhone,
        s.pic AS pic,
        t.nm AS teacherName
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        s.stu_id = 1
        LIMIT 1
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:17:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|-----------------------------------------|----|
|stu_id |name |gender |birth      |phone         |addr              |etc        |created_at          |class_id |uid     |nm  |connet |phone         |pic                                      |nm  |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|-----------------------------------------|----|
|1      |홍길동  |남      |2010-05-15 |010-0000-0000 |1234 # 서울 판교로 112 |갑각류 알러지 있음 |2024-07-04 08:02:22 |201      |parent1 |김부모 |부      |010-1234-5678 |47872175-b41f-4080-bcf9-dc72604c46d5.png |정선생 |
|-------|-----|-------|-----------|--------------|------------------|-----------|--------------------|---------|--------|----|-------|--------------|-----------------------------------------|----|
[0;39m]
[[34m2024-07-10 17:17:28[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-3] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        sc.class_id AS uClass,
        sc.etc AS etc,
        t.nm AS teacherName
        FROM
        student_classes sc
        JOIN
        CLASS c
        ON sc.class_id = c.class_id
        JOIN teacher t
        ON c.tea_id = t.tea_id
        WHERE
        sc.stu_id = 1
        ORDER BY uClass
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 17:17:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mjdbc.resultsettable[0;39m] [[35m
|---------|-------|----|
|class_id |etc    |nm  |
|---------|-------|----|
|101      |null   |홍길동 |
|201      |새우 알러지 |정선생 |
|---------|-------|----|
[0;39m]
[[34m2024-07-10 17:17:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mprevEtc.size() = 2[0;39m]
[[34m2024-07-10 17:17:28[0;39m [32mINFO [0;39mhttp-nio-8080-exec-3] [[33mcom.green.fefu.student.service.StudentServiceImpl[0;39m] [[35mremovePrevEtc.size() = 1[0;39m]
[[34m2024-07-10 17:17:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 17:17:35[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-1] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name, s.birth
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:17:35[0;39m [32mINFO [0;39mhttp-nio-8080-exec-1] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|홍길동  |남      |2010-05-15 |010-0000-0000 |김부모 |010-1234-5678 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-10 17:17:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 17:17:43[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-2] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name, s.birth
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:17:43[0;39m [32mINFO [0;39mhttp-nio-8080-exec-2] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|홍길동  |남      |2010-05-15 |010-0000-0000 |김부모 |010-1234-5678 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-10 17:17:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 17:17:49[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-10] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name, s.birth
 {executed in 1 msec}[0;39m]
[[34m2024-07-10 17:17:49[0;39m [32mINFO [0;39mhttp-nio-8080-exec-10] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|홍길동  |남      |2010-05-15 |010-0000-0000 |김부모 |010-1234-5678 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-10 17:17:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE3MjA1OTYyNjcsImV4cCI6MTcyMTg5MjI2Nywic2lnbmVkVXNlciI6IntcInVzZXJJZFwiOjEsXCJyb2xlXCI6XCJST0xFX0FETUlOXCJ9In0.c2oC5c-Xl11duICu1w_iykXs4tBAL-WE7w7SASuQGIJ9e-achQ7300KbcbndhEfF1pGa9bWtN0xWHiDoM_cgog[0;39m]
[[34m2024-07-10 17:17:59[0;39m [32mDEBUG[0;39mhttp-nio-8080-exec-6] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        s.name AS name,
        s.gender AS gender,
        s.birth AS birth,
        s.phone AS phone,
        p.nm AS parentName,
        p.phone AS parentPhone
        FROM
        student s
        LEFT JOIN
        parents p ON s.parents_id = p.parents_id
        LEFT JOIN
        student_classes sc ON s.stu_id = sc.stu_id
        LEFT JOIN
        class c ON sc.class_id = c.class_id
        LEFT JOIN
        teacher t ON c.tea_id = t.tea_id
        WHERE
        t.tea_id = 1
        ORDER BY s.name, s.birth
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:17:59[0;39m [32mINFO [0;39mhttp-nio-8080-exec-6] [[33mjdbc.resultsettable[0;39m] [[35m
|-----|-------|-----------|--------------|----|--------------|
|name |gender |birth      |phone         |nm  |phone         |
|-----|-------|-----------|--------------|----|--------------|
|이학생  |여      |2010-07-20 |010-2222-3333 |이부모 |010-2345-6789 |
|정학생  |남      |2010-11-30 |010-5555-6666 |정부모 |010-5678-9012 |
|홍길동  |남      |2010-05-15 |010-0000-0000 |김부모 |010-1234-5678 |
|-----|-------|-----------|--------------|----|--------------|
[0;39m]
[[34m2024-07-10 17:18:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-5] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:18:40[0;39m [32mINFO [0;39mhttp-nio-8080-exec-8] [[33mcom.green.fefu.security.jwt.JwtAuthenticationFilter[0;39m] [[35mJwtAuthenticationFilter-Token: null[0;39m]
[[34m2024-07-10 17:57:45[0;39m [32mINFO [0;39mbackground-preinit] [[33morg.hibernate.validator.internal.util.Version[0;39m] [[35mHV000001: Hibernate Validator 8.0.1.Final[0;39m]
[[34m2024-07-10 17:57:45[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarting FefuApplication using Java 17.0.10 with PID 8640 (D:\Students\BCH\backEnd\fefu\build\classes\java\main started by Administrator in D:\Students\BCH\backEnd\fefu)[0;39m]
[[34m2024-07-10 17:57:45[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mNo active profile set, falling back to 1 default profile: "default"[0;39m]
[[34m2024-07-10 17:57:45[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m]
[[34m2024-07-10 17:57:45[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor[0;39m] [[35mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m]
[[34m2024-07-10 17:57:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mBootstrapping Spring Data JPA repositories in DEFAULT mode.[0;39m]
[[34m2024-07-10 17:57:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.data.repository.config.RepositoryConfigurationDelegate[0;39m] [[35mFinished Spring Data repository scanning in 12 ms. Found 0 JPA repository interfaces.[0;39m]
[[34m2024-07-10 17:57:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat initialized with port 8080 (http)[0;39m]
[[34m2024-07-10 17:57:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mInitializing ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 17:57:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardService[0;39m] [[35mStarting service [Tomcat][0;39m]
[[34m2024-07-10 17:57:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.StandardEngine[0;39m] [[35mStarting Servlet engine: [Apache Tomcat/10.1.25][0;39m]
[[34m2024-07-10 17:57:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring embedded WebApplicationContext[0;39m]
[[34m2024-07-10 17:57:46[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.servlet.context.ServletWebServerApplicationContext[0;39m] [[35mRoot WebApplicationContext: initialization completed in 1568 ms[0;39m]
[[34m2024-07-10 17:57:47[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Starting...[0;39m]
[[34m2024-07-10 17:57:47[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.pool.HikariPool[0;39m] [[35mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@31c37049[0;39m]
[[34m2024-07-10 17:57:47[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Start completed.[0;39m]
[[34m2024-07-10 17:57:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.jpa.internal.util.LogHelper[0;39m] [[35mHHH000204: Processing PersistenceUnitInfo [name: default][0;39m]
[[34m2024-07-10 17:57:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.Version[0;39m] [[35mHHH000412: Hibernate ORM core version 6.5.2.Final[0;39m]
[[34m2024-07-10 17:57:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.cache.internal.RegionFactoryInitiator[0;39m] [[35mHHH000026: Second-level cache disabled[0;39m]
[[34m2024-07-10 17:57:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo[0;39m] [[35mNo LoadTimeWeaver setup: ignoring JPA class transformer[0;39m]
[[34m2024-07-10 17:57:47[0;39m [32mDEBUG[0;39mrestartedMain] [[33mjdbc.sqltiming[0;39m] [[35m com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}[0;39m]
[[34m2024-07-10 17:57:47[0;39m [33mWARN [0;39mrestartedMain] [[33morg.hibernate.orm.deprecation[0;39m] [[35mHHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)[0;39m]
[[34m2024-07-10 17:57:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator[0;39m] [[35mHHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)[0;39m]
[[34m2024-07-10 17:57:47[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mInitialized JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 17:57:48[0;39m [33mWARN [0;39mrestartedMain] [[33morg.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration[0;39m] [[35mspring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning[0;39m]
[[34m2024-07-10 17:57:48[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.actuate.endpoint.web.EndpointLinksResolver[0;39m] [[35mExposing 15 endpoints beneath base path '/actuator'[0;39m]
[[34m2024-07-10 17:57:49[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer[0;39m] [[35mLiveReload server is running on port 35729[0;39m]
[[34m2024-07-10 17:57:49[0;39m [32mINFO [0;39mrestartedMain] [[33morg.apache.coyote.http11.Http11NioProtocol[0;39m] [[35mStarting ProtocolHandler ["http-nio-8080"][0;39m]
[[34m2024-07-10 17:57:49[0;39m [32mINFO [0;39mrestartedMain] [[33morg.springframework.boot.web.embedded.tomcat.TomcatWebServer[0;39m] [[35mTomcat started on port 8080 (http) with context path '/'[0;39m]
[[34m2024-07-10 17:57:49[0;39m [32mINFO [0;39mrestartedMain] [[33mcom.green.fefu.FefuApplication[0;39m] [[35mStarted FefuApplication in 4.281 seconds (process running for 4.755)[0;39m]
[[34m2024-07-10 17:57:49[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.48] [[33morg.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][0;39m] [[35mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 17:57:49[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.48] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mInitializing Servlet 'dispatcherServlet'[0;39m]
[[34m2024-07-10 17:57:49[0;39m [32mINFO [0;39mRMI TCP Connection(2)-192.168.0.48] [[33morg.springframework.web.servlet.DispatcherServlet[0;39m] [[35mCompleted initialization in 2 ms[0;39m]
[[34m2024-07-10 17:58:27[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33morg.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean[0;39m] [[35mClosing JPA EntityManagerFactory for persistence unit 'default'[0;39m]
[[34m2024-07-10 17:58:27[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown initiated...[0;39m]
[[34m2024-07-10 17:58:27[0;39m [32mINFO [0;39mSpringApplicationShutdownHook] [[33mcom.zaxxer.hikari.HikariDataSource[0;39m] [[35mHikariPool-1 - Shutdown completed.[0;39m]
